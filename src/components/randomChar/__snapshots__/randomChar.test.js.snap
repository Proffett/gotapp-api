// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing <RandomChar/> Testing snap & state RandomChar have rendered correctly 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
    "wrapInvoke": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "interval": 15000,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          null,
          <Spinner />,
          <View
            char={Array []}
          />,
        ],
      },
      "ref": null,
      "rendered": Object {
        "instance": StyledComponent {
          "_reactInternalFiber": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 134,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 132,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": Array [
                  "useState",
                  "useState",
                  "useState",
                  "useEffect",
                ],
                "_debugID": 130,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 128,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "interval": 15000,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "interval": 15000,
                    },
                    "wrappingComponentProps": null,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "interval": 15000,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 125,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <div
                            class="sc-bdVaJa itsRtM"
                          >
                            <div
                              class="loadingio-spinner-eclipse-w2gkkbfua7n"
                            >
                              <div
                                class="ldio-phqn5f5evyg"
                              >
                                <div />
                              </div>
                            </div>
                            <h4>
                              Random Character: 
                            </h4>
                            <ul
                              class="list-group list-group-flush"
                            >
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>
                            </ul>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": [Circular],
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "interval": 15000,
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "priority": 97,
                          "suspenseConfig": null,
                          "tag": 0,
                        },
                        "baseState": null,
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "interval": 15000,
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "callbackExpirationTime": 0,
                      "callbackNode": null,
                      "callbackPriority": 90,
                      "containerInfo": <div>
                        <div
                          class="sc-bdVaJa itsRtM"
                        >
                          <div
                            class="loadingio-spinner-eclipse-w2gkkbfua7n"
                          >
                            <div
                              class="ldio-phqn5f5evyg"
                            >
                              <div />
                            </div>
                          </div>
                          <h4>
                            Random Character: 
                          </h4>
                          <ul
                            class="list-group list-group-flush"
                          >
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Gender 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Born 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Died 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Culture 
                              </span>
                              <span />
                            </li>
                          </ul>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedExpirationTime": 0,
                      "finishedWork": null,
                      "firstPendingTime": 0,
                      "firstSuspendedTime": 0,
                      "hydrate": false,
                      "interactionThreadID": 17,
                      "lastExpiredTime": 0,
                      "lastPingedTime": 0,
                      "lastSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextKnownPendingLevel": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "interval": 15000,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 517,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "interval": 15000,
                },
                "memoizedState": Object {
                  "baseQueue": null,
                  "baseState": Array [],
                  "memoizedState": Array [],
                  "next": Object {
                    "baseQueue": null,
                    "baseState": true,
                    "memoizedState": true,
                    "next": Object {
                      "baseQueue": null,
                      "baseState": false,
                      "memoizedState": false,
                      "next": Object {
                        "baseQueue": null,
                        "baseState": null,
                        "memoizedState": Object {
                          "create": [Function],
                          "deps": Array [],
                          "destroy": [Function],
                          "next": [Circular],
                          "tag": 5,
                        },
                        "next": null,
                        "queue": null,
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": false,
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": true,
                      "pending": null,
                    },
                  },
                  "queue": Object {
                    "dispatch": [Function],
                    "lastRenderedReducer": [Function],
                    "lastRenderedState": Array [],
                    "pending": null,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "interval": 15000,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 128,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "interval": 15000,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "interval": 15000,
                    },
                    "wrappingComponentProps": null,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "interval": 15000,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 125,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <div
                            class="sc-bdVaJa itsRtM"
                          >
                            <div
                              class="loadingio-spinner-eclipse-w2gkkbfua7n"
                            >
                              <div
                                class="ldio-phqn5f5evyg"
                              >
                                <div />
                              </div>
                            </div>
                            <h4>
                              Random Character: 
                            </h4>
                            <ul
                              class="list-group list-group-flush"
                            >
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>
                            </ul>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": [Circular],
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "interval": 15000,
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "priority": 97,
                          "suspenseConfig": null,
                          "tag": 0,
                        },
                        "baseState": null,
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "interval": 15000,
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "callbackExpirationTime": 0,
                      "callbackNode": null,
                      "callbackPriority": 90,
                      "containerInfo": <div>
                        <div
                          class="sc-bdVaJa itsRtM"
                        >
                          <div
                            class="loadingio-spinner-eclipse-w2gkkbfua7n"
                          >
                            <div
                              class="ldio-phqn5f5evyg"
                            >
                              <div />
                            </div>
                          </div>
                          <h4>
                            Random Character: 
                          </h4>
                          <ul
                            class="list-group list-group-flush"
                          >
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Gender 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Born 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Died 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Culture 
                              </span>
                              <span />
                            </li>
                          </ul>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedExpirationTime": 0,
                      "finishedWork": null,
                      "firstPendingTime": 0,
                      "firstSuspendedTime": 0,
                      "hydrate": false,
                      "interactionThreadID": 17,
                      "lastExpiredTime": 0,
                      "lastPingedTime": 0,
                      "lastSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextKnownPendingLevel": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "interval": 15000,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 0,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "lastEffect": Object {
                    "create": [Function],
                    "deps": Array [],
                    "destroy": [Function],
                    "next": [Circular],
                    "tag": 5,
                  },
                },
              },
              "_debugSource": Object {
                "columnNumber": 5,
                "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                "lineNumber": 58,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bdVaJa",
                  "isStatic": false,
                  "lastClassName": "itsRtM",
                  "rules": Array [
                    "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bdVaJa",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  null,
                  <Spinner />,
                  <View
                    char={Array []}
                  />,
                ],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  null,
                  <Spinner />,
                  <View
                    char={Array []}
                  />,
                ],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": Array [
                  "useState",
                  "useState",
                  "useState",
                  "useEffect",
                ],
                "_debugID": 130,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 128,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "interval": 15000,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "interval": 15000,
                    },
                    "wrappingComponentProps": null,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "interval": 15000,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 125,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <div
                            class="sc-bdVaJa itsRtM"
                          >
                            <div
                              class="loadingio-spinner-eclipse-w2gkkbfua7n"
                            >
                              <div
                                class="ldio-phqn5f5evyg"
                              >
                                <div />
                              </div>
                            </div>
                            <h4>
                              Random Character: 
                            </h4>
                            <ul
                              class="list-group list-group-flush"
                            >
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>
                            </ul>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": [Circular],
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "interval": 15000,
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "priority": 97,
                          "suspenseConfig": null,
                          "tag": 0,
                        },
                        "baseState": null,
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "interval": 15000,
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "callbackExpirationTime": 0,
                      "callbackNode": null,
                      "callbackPriority": 90,
                      "containerInfo": <div>
                        <div
                          class="sc-bdVaJa itsRtM"
                        >
                          <div
                            class="loadingio-spinner-eclipse-w2gkkbfua7n"
                          >
                            <div
                              class="ldio-phqn5f5evyg"
                            >
                              <div />
                            </div>
                          </div>
                          <h4>
                            Random Character: 
                          </h4>
                          <ul
                            class="list-group list-group-flush"
                          >
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Gender 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Born 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Died 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Culture 
                              </span>
                              <span />
                            </li>
                          </ul>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedExpirationTime": 0,
                      "finishedWork": null,
                      "firstPendingTime": 0,
                      "firstSuspendedTime": 0,
                      "hydrate": false,
                      "interactionThreadID": 17,
                      "lastExpiredTime": 0,
                      "lastPingedTime": 0,
                      "lastSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextKnownPendingLevel": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "interval": 15000,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 517,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "interval": 15000,
                },
                "memoizedState": Object {
                  "baseQueue": null,
                  "baseState": Array [],
                  "memoizedState": Array [],
                  "next": Object {
                    "baseQueue": null,
                    "baseState": true,
                    "memoizedState": true,
                    "next": Object {
                      "baseQueue": null,
                      "baseState": false,
                      "memoizedState": false,
                      "next": Object {
                        "baseQueue": null,
                        "baseState": null,
                        "memoizedState": Object {
                          "create": [Function],
                          "deps": Array [],
                          "destroy": [Function],
                          "next": [Circular],
                          "tag": 5,
                        },
                        "next": null,
                        "queue": null,
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": false,
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": true,
                      "pending": null,
                    },
                  },
                  "queue": Object {
                    "dispatch": [Function],
                    "lastRenderedReducer": [Function],
                    "lastRenderedState": Array [],
                    "pending": null,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "interval": 15000,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 128,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "interval": 15000,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "interval": 15000,
                    },
                    "wrappingComponentProps": null,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "interval": 15000,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 125,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <div
                            class="sc-bdVaJa itsRtM"
                          >
                            <div
                              class="loadingio-spinner-eclipse-w2gkkbfua7n"
                            >
                              <div
                                class="ldio-phqn5f5evyg"
                              >
                                <div />
                              </div>
                            </div>
                            <h4>
                              Random Character: 
                            </h4>
                            <ul
                              class="list-group list-group-flush"
                            >
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>
                            </ul>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": [Circular],
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "interval": 15000,
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "priority": 97,
                          "suspenseConfig": null,
                          "tag": 0,
                        },
                        "baseState": null,
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "interval": 15000,
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "callbackExpirationTime": 0,
                      "callbackNode": null,
                      "callbackPriority": 90,
                      "containerInfo": <div>
                        <div
                          class="sc-bdVaJa itsRtM"
                        >
                          <div
                            class="loadingio-spinner-eclipse-w2gkkbfua7n"
                          >
                            <div
                              class="ldio-phqn5f5evyg"
                            >
                              <div />
                            </div>
                          </div>
                          <h4>
                            Random Character: 
                          </h4>
                          <ul
                            class="list-group list-group-flush"
                          >
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Gender 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Born 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Died 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Culture 
                              </span>
                              <span />
                            </li>
                          </ul>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedExpirationTime": 0,
                      "finishedWork": null,
                      "firstPendingTime": 0,
                      "firstSuspendedTime": 0,
                      "hydrate": false,
                      "interactionThreadID": 17,
                      "lastExpiredTime": 0,
                      "lastPingedTime": 0,
                      "lastSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextKnownPendingLevel": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "interval": 15000,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 0,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "lastEffect": Object {
                    "create": [Function],
                    "deps": Array [],
                    "destroy": [Function],
                    "next": [Circular],
                    "tag": 5,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bdVaJa",
                  "isStatic": false,
                  "lastClassName": "itsRtM",
                  "rules": Array [
                    "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bdVaJa",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 142,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": Array [
                        "useState",
                        "useState",
                        "useState",
                        "useEffect",
                      ],
                      "_debugID": 130,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 128,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "interval": 15000,
                          },
                          "refProp": null,
                          "wrappingComponentProps": null,
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "interval": 15000,
                          },
                          "wrappingComponentProps": null,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "interval": 15000,
                          },
                          "refProp": null,
                          "wrappingComponentProps": null,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 125,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 125,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 0,
                            "elementType": null,
                            "expirationTime": 1073741823,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "callbackExpirationTime": 0,
                              "callbackNode": null,
                              "callbackPriority": 90,
                              "containerInfo": <div>
                                <div
                                  class="sc-bdVaJa itsRtM"
                                >
                                  <div
                                    class="loadingio-spinner-eclipse-w2gkkbfua7n"
                                  >
                                    <div
                                      class="ldio-phqn5f5evyg"
                                    >
                                      <div />
                                    </div>
                                  </div>
                                  <h4>
                                    Random Character: 
                                  </h4>
                                  <ul
                                    class="list-group list-group-flush"
                                  >
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Gender 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Born 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Died 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Culture 
                                      </span>
                                      <span />
                                    </li>
                                  </ul>
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedExpirationTime": 0,
                              "finishedWork": null,
                              "firstPendingTime": 0,
                              "firstSuspendedTime": 0,
                              "hydrate": false,
                              "interactionThreadID": 17,
                              "lastExpiredTime": 0,
                              "lastPingedTime": 0,
                              "lastSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextKnownPendingLevel": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pingCache": null,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseQueue": Object {
                                "callback": null,
                                "expirationTime": 1073741823,
                                "next": [Circular],
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "interval": 15000,
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "priority": 97,
                                "suspenseConfig": null,
                                "tag": 0,
                              },
                              "baseState": null,
                              "effects": null,
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "interval": 15000,
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "callbackExpirationTime": 0,
                            "callbackNode": null,
                            "callbackPriority": 90,
                            "containerInfo": <div>
                              <div
                                class="sc-bdVaJa itsRtM"
                              >
                                <div
                                  class="loadingio-spinner-eclipse-w2gkkbfua7n"
                                >
                                  <div
                                    class="ldio-phqn5f5evyg"
                                  >
                                    <div />
                                  </div>
                                </div>
                                <h4>
                                  Random Character: 
                                </h4>
                                <ul
                                  class="list-group list-group-flush"
                                >
                                  <li
                                    class="list-group-item d-flex justify-content-between"
                                  >
                                    <span
                                      class="term"
                                    >
                                      Gender 
                                    </span>
                                    <span />
                                  </li>
                                  <li
                                    class="list-group-item d-flex justify-content-between"
                                  >
                                    <span
                                      class="term"
                                    >
                                      Born 
                                    </span>
                                    <span />
                                  </li>
                                  <li
                                    class="list-group-item d-flex justify-content-between"
                                  >
                                    <span
                                      class="term"
                                    >
                                      Died 
                                    </span>
                                    <span />
                                  </li>
                                  <li
                                    class="list-group-item d-flex justify-content-between"
                                  >
                                    <span
                                      class="term"
                                    >
                                      Culture 
                                    </span>
                                    <span />
                                  </li>
                                </ul>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedExpirationTime": 0,
                            "finishedWork": null,
                            "firstPendingTime": 0,
                            "firstSuspendedTime": 0,
                            "hydrate": false,
                            "interactionThreadID": 17,
                            "lastExpiredTime": 0,
                            "lastPingedTime": 0,
                            "lastSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextKnownPendingLevel": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pingCache": null,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseQueue": null,
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "interval": 15000,
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "effects": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "interval": 15000,
                            },
                            "refProp": null,
                            "wrappingComponentProps": null,
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "interval": 15000,
                            },
                            "wrappingComponentProps": null,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 1,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": Object {
                          "baseQueue": null,
                          "baseState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "interval": 15000,
                            },
                            "wrappingComponentProps": null,
                          },
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 132,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "columnNumber": 5,
                          "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                          "lineNumber": 58,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bdVaJa",
                            "isStatic": false,
                            "lastClassName": "itsRtM",
                            "rules": Array [
                              "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bdVaJa",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        },
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            null,
                            <Spinner />,
                            <View
                              char={Array []}
                            />,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            null,
                            <Spinner />,
                            <View
                              char={Array []}
                            />,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 11,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bdVaJa",
                            "isStatic": false,
                            "lastClassName": "itsRtM",
                            "rules": Array [
                              "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bdVaJa",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        },
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 517,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "interval": 15000,
                      },
                      "memoizedState": Object {
                        "baseQueue": null,
                        "baseState": Array [],
                        "memoizedState": Array [],
                        "next": Object {
                          "baseQueue": null,
                          "baseState": true,
                          "memoizedState": true,
                          "next": Object {
                            "baseQueue": null,
                            "baseState": false,
                            "memoizedState": false,
                            "next": Object {
                              "baseQueue": null,
                              "baseState": null,
                              "memoizedState": Object {
                                "create": [Function],
                                "deps": Array [],
                                "destroy": [Function],
                                "next": [Circular],
                                "tag": 5,
                              },
                              "next": null,
                              "queue": null,
                            },
                            "queue": Object {
                              "dispatch": [Function],
                              "lastRenderedReducer": [Function],
                              "lastRenderedState": false,
                              "pending": null,
                            },
                          },
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": true,
                            "pending": null,
                          },
                        },
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": Array [],
                          "pending": null,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "interval": 15000,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 128,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "interval": 15000,
                          },
                          "refProp": null,
                          "wrappingComponentProps": null,
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "interval": 15000,
                          },
                          "wrappingComponentProps": null,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "interval": 15000,
                          },
                          "refProp": null,
                          "wrappingComponentProps": null,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 125,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 125,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 0,
                            "elementType": null,
                            "expirationTime": 1073741823,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "callbackExpirationTime": 0,
                              "callbackNode": null,
                              "callbackPriority": 90,
                              "containerInfo": <div>
                                <div
                                  class="sc-bdVaJa itsRtM"
                                >
                                  <div
                                    class="loadingio-spinner-eclipse-w2gkkbfua7n"
                                  >
                                    <div
                                      class="ldio-phqn5f5evyg"
                                    >
                                      <div />
                                    </div>
                                  </div>
                                  <h4>
                                    Random Character: 
                                  </h4>
                                  <ul
                                    class="list-group list-group-flush"
                                  >
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Gender 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Born 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Died 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Culture 
                                      </span>
                                      <span />
                                    </li>
                                  </ul>
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedExpirationTime": 0,
                              "finishedWork": null,
                              "firstPendingTime": 0,
                              "firstSuspendedTime": 0,
                              "hydrate": false,
                              "interactionThreadID": 17,
                              "lastExpiredTime": 0,
                              "lastPingedTime": 0,
                              "lastSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextKnownPendingLevel": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pingCache": null,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseQueue": Object {
                                "callback": null,
                                "expirationTime": 1073741823,
                                "next": [Circular],
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "interval": 15000,
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "priority": 97,
                                "suspenseConfig": null,
                                "tag": 0,
                              },
                              "baseState": null,
                              "effects": null,
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "interval": 15000,
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "callbackExpirationTime": 0,
                            "callbackNode": null,
                            "callbackPriority": 90,
                            "containerInfo": <div>
                              <div
                                class="sc-bdVaJa itsRtM"
                              >
                                <div
                                  class="loadingio-spinner-eclipse-w2gkkbfua7n"
                                >
                                  <div
                                    class="ldio-phqn5f5evyg"
                                  >
                                    <div />
                                  </div>
                                </div>
                                <h4>
                                  Random Character: 
                                </h4>
                                <ul
                                  class="list-group list-group-flush"
                                >
                                  <li
                                    class="list-group-item d-flex justify-content-between"
                                  >
                                    <span
                                      class="term"
                                    >
                                      Gender 
                                    </span>
                                    <span />
                                  </li>
                                  <li
                                    class="list-group-item d-flex justify-content-between"
                                  >
                                    <span
                                      class="term"
                                    >
                                      Born 
                                    </span>
                                    <span />
                                  </li>
                                  <li
                                    class="list-group-item d-flex justify-content-between"
                                  >
                                    <span
                                      class="term"
                                    >
                                      Died 
                                    </span>
                                    <span />
                                  </li>
                                  <li
                                    class="list-group-item d-flex justify-content-between"
                                  >
                                    <span
                                      class="term"
                                    >
                                      Culture 
                                    </span>
                                    <span />
                                  </li>
                                </ul>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedExpirationTime": 0,
                            "finishedWork": null,
                            "firstPendingTime": 0,
                            "firstSuspendedTime": 0,
                            "hydrate": false,
                            "interactionThreadID": 17,
                            "lastExpiredTime": 0,
                            "lastPingedTime": 0,
                            "lastSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextKnownPendingLevel": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pingCache": null,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseQueue": null,
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "interval": 15000,
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "effects": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "interval": 15000,
                            },
                            "refProp": null,
                            "wrappingComponentProps": null,
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "interval": 15000,
                            },
                            "wrappingComponentProps": null,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 1,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": Object {
                          "baseQueue": null,
                          "baseState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "interval": 15000,
                            },
                            "wrappingComponentProps": null,
                          },
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "lastEffect": Object {
                          "create": [Function],
                          "deps": Array [],
                          "destroy": [Function],
                          "next": [Circular],
                          "tag": 5,
                        },
                      },
                    },
                    "_debugSource": Object {
                      "columnNumber": 29,
                      "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                      "lineNumber": 41,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 145,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "columnNumber": 7,
                        "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\spinner\\\\spinner.js",
                        "lineNumber": 7,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 147,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "columnNumber": 9,
                          "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\spinner\\\\spinner.js",
                          "lineNumber": 8,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 149,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "columnNumber": 11,
                            "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\spinner\\\\spinner.js",
                            "lineNumber": 9,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {},
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {},
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <div />,
                          "className": "ldio-phqn5f5evyg",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <div />,
                          "className": "ldio-phqn5f5evyg",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="ldio-phqn5f5evyg"
                        >
                          <div />
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <div
                          className="ldio-phqn5f5evyg"
                        >
                          <div />
                        </div>,
                        "className": "loadingio-spinner-eclipse-w2gkkbfua7n",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <div
                          className="ldio-phqn5f5evyg"
                        >
                          <div />
                        </div>,
                        "className": "loadingio-spinner-eclipse-w2gkkbfua7n",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="loadingio-spinner-eclipse-w2gkkbfua7n"
                      >
                        <div
                          class="ldio-phqn5f5evyg"
                        >
                          <div />
                        </div>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 143,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                          "useState",
                          "useState",
                          "useEffect",
                        ],
                        "_debugID": 130,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 128,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "interval": 15000,
                            },
                            "refProp": null,
                            "wrappingComponentProps": null,
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "interval": 15000,
                            },
                            "wrappingComponentProps": null,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "interval": 15000,
                            },
                            "refProp": null,
                            "wrappingComponentProps": null,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 125,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 125,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": [Circular],
                              "child": null,
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 1073741823,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <div
                                    class="sc-bdVaJa itsRtM"
                                  >
                                    <div
                                      class="loadingio-spinner-eclipse-w2gkkbfua7n"
                                    >
                                      <div
                                        class="ldio-phqn5f5evyg"
                                      >
                                        <div />
                                      </div>
                                    </div>
                                    <h4>
                                      Random Character: 
                                    </h4>
                                    <ul
                                      class="list-group list-group-flush"
                                    >
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Gender 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Born 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Died 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Culture 
                                        </span>
                                        <span />
                                      </li>
                                    </ul>
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 17,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseQueue": Object {
                                  "callback": null,
                                  "expirationTime": 1073741823,
                                  "next": [Circular],
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "interval": 15000,
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "priority": 97,
                                  "suspenseConfig": null,
                                  "tag": 0,
                                },
                                "baseState": null,
                                "effects": null,
                                "shared": Object {
                                  "pending": null,
                                },
                              },
                            },
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 0,
                            "elementType": null,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "interval": 15000,
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "callbackExpirationTime": 0,
                              "callbackNode": null,
                              "callbackPriority": 90,
                              "containerInfo": <div>
                                <div
                                  class="sc-bdVaJa itsRtM"
                                >
                                  <div
                                    class="loadingio-spinner-eclipse-w2gkkbfua7n"
                                  >
                                    <div
                                      class="ldio-phqn5f5evyg"
                                    >
                                      <div />
                                    </div>
                                  </div>
                                  <h4>
                                    Random Character: 
                                  </h4>
                                  <ul
                                    class="list-group list-group-flush"
                                  >
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Gender 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Born 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Died 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Culture 
                                      </span>
                                      <span />
                                    </li>
                                  </ul>
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedExpirationTime": 0,
                              "finishedWork": null,
                              "firstPendingTime": 0,
                              "firstSuspendedTime": 0,
                              "hydrate": false,
                              "interactionThreadID": 17,
                              "lastExpiredTime": 0,
                              "lastPingedTime": 0,
                              "lastSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextKnownPendingLevel": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pingCache": null,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseQueue": null,
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "interval": 15000,
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "effects": null,
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "interval": 15000,
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "interval": 15000,
                              },
                              "wrappingComponentProps": null,
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": Object {
                            "baseQueue": null,
                            "baseState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "interval": 15000,
                              },
                              "wrappingComponentProps": null,
                            },
                            "effects": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 132,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "columnNumber": 5,
                            "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                            "lineNumber": 58,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bdVaJa",
                              "isStatic": false,
                              "lastClassName": "itsRtM",
                              "rules": Array [
                                "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bdVaJa",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              null,
                              <Spinner />,
                              <View
                                char={Array []}
                              />,
                            ],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              null,
                              <Spinner />,
                              <View
                                char={Array []}
                              />,
                            ],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 11,
                          "treeBaseDuration": 0,
                          "type": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bdVaJa",
                              "isStatic": false,
                              "lastClassName": "itsRtM",
                              "rules": Array [
                                "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bdVaJa",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 517,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "interval": 15000,
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": Array [],
                          "memoizedState": Array [],
                          "next": Object {
                            "baseQueue": null,
                            "baseState": true,
                            "memoizedState": true,
                            "next": Object {
                              "baseQueue": null,
                              "baseState": false,
                              "memoizedState": false,
                              "next": Object {
                                "baseQueue": null,
                                "baseState": null,
                                "memoizedState": Object {
                                  "create": [Function],
                                  "deps": Array [],
                                  "destroy": [Function],
                                  "next": [Circular],
                                  "tag": 5,
                                },
                                "next": null,
                                "queue": null,
                              },
                              "queue": Object {
                                "dispatch": [Function],
                                "lastRenderedReducer": [Function],
                                "lastRenderedState": false,
                                "pending": null,
                              },
                            },
                            "queue": Object {
                              "dispatch": [Function],
                              "lastRenderedReducer": [Function],
                              "lastRenderedState": true,
                              "pending": null,
                            },
                          },
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": Array [],
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "interval": 15000,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 128,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "interval": 15000,
                            },
                            "refProp": null,
                            "wrappingComponentProps": null,
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "interval": 15000,
                            },
                            "wrappingComponentProps": null,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "interval": 15000,
                            },
                            "refProp": null,
                            "wrappingComponentProps": null,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 125,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 125,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": [Circular],
                              "child": null,
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 1073741823,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <div
                                    class="sc-bdVaJa itsRtM"
                                  >
                                    <div
                                      class="loadingio-spinner-eclipse-w2gkkbfua7n"
                                    >
                                      <div
                                        class="ldio-phqn5f5evyg"
                                      >
                                        <div />
                                      </div>
                                    </div>
                                    <h4>
                                      Random Character: 
                                    </h4>
                                    <ul
                                      class="list-group list-group-flush"
                                    >
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Gender 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Born 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Died 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Culture 
                                        </span>
                                        <span />
                                      </li>
                                    </ul>
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 17,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseQueue": Object {
                                  "callback": null,
                                  "expirationTime": 1073741823,
                                  "next": [Circular],
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "interval": 15000,
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "priority": 97,
                                  "suspenseConfig": null,
                                  "tag": 0,
                                },
                                "baseState": null,
                                "effects": null,
                                "shared": Object {
                                  "pending": null,
                                },
                              },
                            },
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 0,
                            "elementType": null,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "interval": 15000,
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "callbackExpirationTime": 0,
                              "callbackNode": null,
                              "callbackPriority": 90,
                              "containerInfo": <div>
                                <div
                                  class="sc-bdVaJa itsRtM"
                                >
                                  <div
                                    class="loadingio-spinner-eclipse-w2gkkbfua7n"
                                  >
                                    <div
                                      class="ldio-phqn5f5evyg"
                                    >
                                      <div />
                                    </div>
                                  </div>
                                  <h4>
                                    Random Character: 
                                  </h4>
                                  <ul
                                    class="list-group list-group-flush"
                                  >
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Gender 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Born 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Died 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Culture 
                                      </span>
                                      <span />
                                    </li>
                                  </ul>
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedExpirationTime": 0,
                              "finishedWork": null,
                              "firstPendingTime": 0,
                              "firstSuspendedTime": 0,
                              "hydrate": false,
                              "interactionThreadID": 17,
                              "lastExpiredTime": 0,
                              "lastPingedTime": 0,
                              "lastSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextKnownPendingLevel": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pingCache": null,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseQueue": null,
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "interval": 15000,
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "effects": null,
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "interval": 15000,
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "interval": 15000,
                              },
                              "wrappingComponentProps": null,
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": Object {
                            "baseQueue": null,
                            "baseState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "interval": 15000,
                              },
                              "wrappingComponentProps": null,
                            },
                            "effects": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": Object {
                          "lastEffect": Object {
                            "create": [Function],
                            "deps": Array [],
                            "destroy": [Function],
                            "next": [Circular],
                            "tag": 5,
                          },
                        },
                      },
                      "_debugSource": Object {
                        "columnNumber": 19,
                        "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                        "lineNumber": 42,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 152,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "columnNumber": 7,
                          "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                          "lineNumber": 78,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 155,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": "Random Character: ",
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": "Random Character: ",
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Random Character: ,
                          "tag": 6,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": "h4",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            "Random Character: ",
                            undefined,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            "Random Character: ",
                            undefined,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 153,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "columnNumber": 7,
                            "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                            "lineNumber": 79,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 158,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "columnNumber": 9,
                              "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                              "lineNumber": 80,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 163,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "columnNumber": 11,
                                "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                "lineNumber": 81,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": "span",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Gender ",
                                "className": "term",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Gender ",
                                "className": "term",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 164,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "columnNumber": 11,
                                  "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                  "lineNumber": 82,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": "span",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": undefined,
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": undefined,
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <span />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "span",
                                "updateQueue": null,
                              },
                              "stateNode": <span
                                class="term"
                              >
                                Gender 
                              </span>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "span",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 0,
                            "elementType": "li",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <span
                                  className="term"
                                >
                                  Gender 
                                </span>,
                                <span />,
                              ],
                              "className": "list-group-item d-flex justify-content-between",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <span
                                  className="term"
                                >
                                  Gender 
                                </span>,
                                <span />,
                              ],
                              "className": "list-group-item d-flex justify-content-between",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 159,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "columnNumber": 9,
                                "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                "lineNumber": 84,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 168,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "columnNumber": 11,
                                  "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                  "lineNumber": 85,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": "span",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Born ",
                                  "className": "term",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "Born ",
                                  "className": "term",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 169,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "columnNumber": 11,
                                    "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                    "lineNumber": 86,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": "span",
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 1,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": undefined,
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": undefined,
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <span />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "span",
                                  "updateQueue": null,
                                },
                                "stateNode": <span
                                  class="term"
                                >
                                  Born 
                                </span>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "span",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": "li",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <span
                                    className="term"
                                  >
                                    Born 
                                  </span>,
                                  <span />,
                                ],
                                "className": "list-group-item d-flex justify-content-between",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <span
                                    className="term"
                                  >
                                    Born 
                                  </span>,
                                  <span />,
                                ],
                                "className": "list-group-item d-flex justify-content-between",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 160,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "columnNumber": 9,
                                  "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                  "lineNumber": 88,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 173,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "columnNumber": 11,
                                    "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                    "lineNumber": 89,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": "span",
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Died ",
                                    "className": "term",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "Died ",
                                    "className": "term",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 174,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "columnNumber": 11,
                                      "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                      "lineNumber": 90,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "dependencies": null,
                                    "effectTag": 0,
                                    "elementType": "span",
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 1,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": undefined,
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": undefined,
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <span />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "span",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <span
                                    class="term"
                                  >
                                    Died 
                                  </span>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "span",
                                  "updateQueue": null,
                                },
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": "li",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 2,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <span
                                      className="term"
                                    >
                                      Died 
                                    </span>,
                                    <span />,
                                  ],
                                  "className": "list-group-item d-flex justify-content-between",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <span
                                      className="term"
                                    >
                                      Died 
                                    </span>,
                                    <span />,
                                  ],
                                  "className": "list-group-item d-flex justify-content-between",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 161,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "columnNumber": 9,
                                    "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                    "lineNumber": 92,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 178,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "columnNumber": 11,
                                      "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                      "lineNumber": 93,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "dependencies": null,
                                    "effectTag": 0,
                                    "elementType": "span",
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": "Culture ",
                                      "className": "term",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": "Culture ",
                                      "className": "term",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 179,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "columnNumber": 11,
                                        "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                        "lineNumber": 94,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "dependencies": null,
                                      "effectTag": 0,
                                      "elementType": "span",
                                      "expirationTime": 0,
                                      "firstEffect": null,
                                      "index": 1,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": undefined,
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": undefined,
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <span />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "span",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <span
                                      class="term"
                                    >
                                      Culture 
                                    </span>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "span",
                                    "updateQueue": null,
                                  },
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": "li",
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 3,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      <span
                                        className="term"
                                      >
                                        Culture 
                                      </span>,
                                      <span />,
                                    ],
                                    "className": "list-group-item d-flex justify-content-between",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      <span
                                        className="term"
                                      >
                                        Culture 
                                      </span>,
                                      <span />,
                                    ],
                                    "className": "list-group-item d-flex justify-content-between",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <li
                                    class="list-group-item d-flex justify-content-between"
                                  >
                                    <span
                                      class="term"
                                    >
                                      Culture 
                                    </span>
                                    <span />
                                  </li>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "li",
                                  "updateQueue": null,
                                },
                                "stateNode": <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Died 
                                  </span>
                                  <span />
                                </li>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "li",
                                "updateQueue": null,
                              },
                              "stateNode": <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "li",
                              "updateQueue": null,
                            },
                            "stateNode": <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Gender 
                              </span>
                              <span />
                            </li>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "li",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": "ul",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <li
                                className="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  className="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>,
                              <li
                                className="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  className="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>,
                              <li
                                className="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  className="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>,
                              <li
                                className="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  className="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>,
                            ],
                            "className": "list-group list-group-flush",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <li
                                className="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  className="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>,
                              <li
                                className="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  className="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>,
                              <li
                                className="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  className="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>,
                              <li
                                className="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  className="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>,
                            ],
                            "className": "list-group list-group-flush",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <ul
                            class="list-group list-group-flush"
                          >
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Gender 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Born 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Died 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Culture 
                              </span>
                              <span />
                            </li>
                          </ul>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "ul",
                          "updateQueue": null,
                        },
                        "stateNode": <h4>
                          Random Character: 
                        </h4>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "h4",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "char": Array [],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "char": Array [],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      null,
                      <Spinner />,
                      <View
                        char={Array []}
                      />,
                    ],
                    "className": "sc-bdVaJa itsRtM",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      null,
                      <Spinner />,
                      <View
                        char={Array []}
                      />,
                    ],
                    "className": "sc-bdVaJa itsRtM",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="sc-bdVaJa itsRtM"
                  >
                    <div
                      class="loadingio-spinner-eclipse-w2gkkbfua7n"
                    >
                      <div
                        class="ldio-phqn5f5evyg"
                      >
                        <div />
                      </div>
                    </div>
                    <h4>
                      Random Character: 
                    </h4>
                    <ul
                      class="list-group list-group-flush"
                    >
                      <li
                        class="list-group-item d-flex justify-content-between"
                      >
                        <span
                          class="term"
                        >
                          Gender 
                        </span>
                        <span />
                      </li>
                      <li
                        class="list-group-item d-flex justify-content-between"
                      >
                        <span
                          class="term"
                        >
                          Born 
                        </span>
                        <span />
                      </li>
                      <li
                        class="list-group-item d-flex justify-content-between"
                      >
                        <span
                          class="term"
                        >
                          Died 
                        </span>
                        <span />
                      </li>
                      <li
                        class="list-group-item d-flex justify-content-between"
                      >
                        <span
                          class="term"
                        >
                          Culture 
                        </span>
                        <span />
                      </li>
                    </ul>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": null,
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": null,
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": null,
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": null,
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                null,
                <Spinner />,
                <View
                  char={Array []}
                />,
              ],
              "forwardedComponent": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bdVaJa",
                  "isStatic": false,
                  "lastClassName": "itsRtM",
                  "rules": Array [
                    "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bdVaJa",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
              "forwardedRef": null,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                null,
                <Spinner />,
                <View
                  char={Array []}
                />,
              ],
              "forwardedComponent": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bdVaJa",
                  "isStatic": false,
                  "lastClassName": "itsRtM",
                  "rules": Array [
                    "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bdVaJa",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
              "forwardedRef": null,
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 132,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": Array [
                  "useState",
                  "useState",
                  "useState",
                  "useEffect",
                ],
                "_debugID": 130,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 128,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "interval": 15000,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "interval": 15000,
                    },
                    "wrappingComponentProps": null,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "interval": 15000,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 125,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <div
                            class="sc-bdVaJa itsRtM"
                          >
                            <div
                              class="loadingio-spinner-eclipse-w2gkkbfua7n"
                            >
                              <div
                                class="ldio-phqn5f5evyg"
                              >
                                <div />
                              </div>
                            </div>
                            <h4>
                              Random Character: 
                            </h4>
                            <ul
                              class="list-group list-group-flush"
                            >
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>
                            </ul>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": [Circular],
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "interval": 15000,
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "priority": 97,
                          "suspenseConfig": null,
                          "tag": 0,
                        },
                        "baseState": null,
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "interval": 15000,
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "callbackExpirationTime": 0,
                      "callbackNode": null,
                      "callbackPriority": 90,
                      "containerInfo": <div>
                        <div
                          class="sc-bdVaJa itsRtM"
                        >
                          <div
                            class="loadingio-spinner-eclipse-w2gkkbfua7n"
                          >
                            <div
                              class="ldio-phqn5f5evyg"
                            >
                              <div />
                            </div>
                          </div>
                          <h4>
                            Random Character: 
                          </h4>
                          <ul
                            class="list-group list-group-flush"
                          >
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Gender 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Born 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Died 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Culture 
                              </span>
                              <span />
                            </li>
                          </ul>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedExpirationTime": 0,
                      "finishedWork": null,
                      "firstPendingTime": 0,
                      "firstSuspendedTime": 0,
                      "hydrate": false,
                      "interactionThreadID": 17,
                      "lastExpiredTime": 0,
                      "lastPingedTime": 0,
                      "lastSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextKnownPendingLevel": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "interval": 15000,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 517,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "interval": 15000,
                },
                "memoizedState": Object {
                  "baseQueue": null,
                  "baseState": Array [],
                  "memoizedState": Array [],
                  "next": Object {
                    "baseQueue": null,
                    "baseState": true,
                    "memoizedState": true,
                    "next": Object {
                      "baseQueue": null,
                      "baseState": false,
                      "memoizedState": false,
                      "next": Object {
                        "baseQueue": null,
                        "baseState": null,
                        "memoizedState": Object {
                          "create": [Function],
                          "deps": Array [],
                          "destroy": [Function],
                          "next": [Circular],
                          "tag": 5,
                        },
                        "next": null,
                        "queue": null,
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": false,
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": true,
                      "pending": null,
                    },
                  },
                  "queue": Object {
                    "dispatch": [Function],
                    "lastRenderedReducer": [Function],
                    "lastRenderedState": Array [],
                    "pending": null,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "interval": 15000,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 128,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "interval": 15000,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "interval": 15000,
                    },
                    "wrappingComponentProps": null,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "interval": 15000,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 125,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <div
                            class="sc-bdVaJa itsRtM"
                          >
                            <div
                              class="loadingio-spinner-eclipse-w2gkkbfua7n"
                            >
                              <div
                                class="ldio-phqn5f5evyg"
                              >
                                <div />
                              </div>
                            </div>
                            <h4>
                              Random Character: 
                            </h4>
                            <ul
                              class="list-group list-group-flush"
                            >
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>
                            </ul>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": [Circular],
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "interval": 15000,
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "priority": 97,
                          "suspenseConfig": null,
                          "tag": 0,
                        },
                        "baseState": null,
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "interval": 15000,
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "callbackExpirationTime": 0,
                      "callbackNode": null,
                      "callbackPriority": 90,
                      "containerInfo": <div>
                        <div
                          class="sc-bdVaJa itsRtM"
                        >
                          <div
                            class="loadingio-spinner-eclipse-w2gkkbfua7n"
                          >
                            <div
                              class="ldio-phqn5f5evyg"
                            >
                              <div />
                            </div>
                          </div>
                          <h4>
                            Random Character: 
                          </h4>
                          <ul
                            class="list-group list-group-flush"
                          >
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Gender 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Born 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Died 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Culture 
                              </span>
                              <span />
                            </li>
                          </ul>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedExpirationTime": 0,
                      "finishedWork": null,
                      "firstPendingTime": 0,
                      "firstSuspendedTime": 0,
                      "hydrate": false,
                      "interactionThreadID": 17,
                      "lastExpiredTime": 0,
                      "lastPingedTime": 0,
                      "lastSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextKnownPendingLevel": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "interval": 15000,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 0,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "lastEffect": Object {
                    "create": [Function],
                    "deps": Array [],
                    "destroy": [Function],
                    "next": [Circular],
                    "tag": 5,
                  },
                },
              },
              "_debugSource": Object {
                "columnNumber": 5,
                "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                "lineNumber": 58,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bdVaJa",
                  "isStatic": false,
                  "lastClassName": "itsRtM",
                  "rules": Array [
                    "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bdVaJa",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  null,
                  <Spinner />,
                  <View
                    char={Array []}
                  />,
                ],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  null,
                  <Spinner />,
                  <View
                    char={Array []}
                  />,
                ],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": Array [
                  "useState",
                  "useState",
                  "useState",
                  "useEffect",
                ],
                "_debugID": 130,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 128,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "interval": 15000,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "interval": 15000,
                    },
                    "wrappingComponentProps": null,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "interval": 15000,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 125,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <div
                            class="sc-bdVaJa itsRtM"
                          >
                            <div
                              class="loadingio-spinner-eclipse-w2gkkbfua7n"
                            >
                              <div
                                class="ldio-phqn5f5evyg"
                              >
                                <div />
                              </div>
                            </div>
                            <h4>
                              Random Character: 
                            </h4>
                            <ul
                              class="list-group list-group-flush"
                            >
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>
                            </ul>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": [Circular],
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "interval": 15000,
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "priority": 97,
                          "suspenseConfig": null,
                          "tag": 0,
                        },
                        "baseState": null,
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "interval": 15000,
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "callbackExpirationTime": 0,
                      "callbackNode": null,
                      "callbackPriority": 90,
                      "containerInfo": <div>
                        <div
                          class="sc-bdVaJa itsRtM"
                        >
                          <div
                            class="loadingio-spinner-eclipse-w2gkkbfua7n"
                          >
                            <div
                              class="ldio-phqn5f5evyg"
                            >
                              <div />
                            </div>
                          </div>
                          <h4>
                            Random Character: 
                          </h4>
                          <ul
                            class="list-group list-group-flush"
                          >
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Gender 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Born 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Died 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Culture 
                              </span>
                              <span />
                            </li>
                          </ul>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedExpirationTime": 0,
                      "finishedWork": null,
                      "firstPendingTime": 0,
                      "firstSuspendedTime": 0,
                      "hydrate": false,
                      "interactionThreadID": 17,
                      "lastExpiredTime": 0,
                      "lastPingedTime": 0,
                      "lastSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextKnownPendingLevel": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "interval": 15000,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 517,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "interval": 15000,
                },
                "memoizedState": Object {
                  "baseQueue": null,
                  "baseState": Array [],
                  "memoizedState": Array [],
                  "next": Object {
                    "baseQueue": null,
                    "baseState": true,
                    "memoizedState": true,
                    "next": Object {
                      "baseQueue": null,
                      "baseState": false,
                      "memoizedState": false,
                      "next": Object {
                        "baseQueue": null,
                        "baseState": null,
                        "memoizedState": Object {
                          "create": [Function],
                          "deps": Array [],
                          "destroy": [Function],
                          "next": [Circular],
                          "tag": 5,
                        },
                        "next": null,
                        "queue": null,
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": false,
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": true,
                      "pending": null,
                    },
                  },
                  "queue": Object {
                    "dispatch": [Function],
                    "lastRenderedReducer": [Function],
                    "lastRenderedState": Array [],
                    "pending": null,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "interval": 15000,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 128,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "interval": 15000,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "interval": 15000,
                    },
                    "wrappingComponentProps": null,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "interval": 15000,
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 125,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <div
                            class="sc-bdVaJa itsRtM"
                          >
                            <div
                              class="loadingio-spinner-eclipse-w2gkkbfua7n"
                            >
                              <div
                                class="ldio-phqn5f5evyg"
                              >
                                <div />
                              </div>
                            </div>
                            <h4>
                              Random Character: 
                            </h4>
                            <ul
                              class="list-group list-group-flush"
                            >
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>
                            </ul>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": [Circular],
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "interval": 15000,
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "priority": 97,
                          "suspenseConfig": null,
                          "tag": 0,
                        },
                        "baseState": null,
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "interval": 15000,
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "callbackExpirationTime": 0,
                      "callbackNode": null,
                      "callbackPriority": 90,
                      "containerInfo": <div>
                        <div
                          class="sc-bdVaJa itsRtM"
                        >
                          <div
                            class="loadingio-spinner-eclipse-w2gkkbfua7n"
                          >
                            <div
                              class="ldio-phqn5f5evyg"
                            >
                              <div />
                            </div>
                          </div>
                          <h4>
                            Random Character: 
                          </h4>
                          <ul
                            class="list-group list-group-flush"
                          >
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Gender 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Born 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Died 
                              </span>
                              <span />
                            </li>
                            <li
                              class="list-group-item d-flex justify-content-between"
                            >
                              <span
                                class="term"
                              >
                                Culture 
                              </span>
                              <span />
                            </li>
                          </ul>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedExpirationTime": 0,
                      "finishedWork": null,
                      "firstPendingTime": 0,
                      "firstSuspendedTime": 0,
                      "hydrate": false,
                      "interactionThreadID": 17,
                      "lastExpiredTime": 0,
                      "lastPingedTime": 0,
                      "lastSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextKnownPendingLevel": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "interval": 15000,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 0,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "lastEffect": Object {
                    "create": [Function],
                    "deps": Array [],
                    "destroy": [Function],
                    "next": [Circular],
                    "tag": 5,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bdVaJa",
                  "isStatic": false,
                  "lastClassName": "itsRtM",
                  "rules": Array [
                    "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bdVaJa",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": [Circular],
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": null,
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "_reactInternalInstance": Object {},
          "attrs": Object {},
          "context": Object {},
          "props": Object {
            "children": Array [
              null,
              <Spinner />,
              <View
                char={Array []}
              />,
            ],
            "forwardedComponent": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bdVaJa",
                "isStatic": false,
                "lastClassName": "itsRtM",
                "rules": Array [
                  "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bdVaJa",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
            "forwardedRef": null,
          },
          "refs": Object {},
          "renderInner": [Function],
          "renderOuter": [Function],
          "state": null,
          "styleSheet": StyleSheet {
            "capacity": 40,
            "clones": Array [],
            "deferred": Object {
              "sc-bdVaJa": undefined,
            },
            "forceServer": false,
            "getImportRuleTag": [Function],
            "id": 1,
            "ignoreRehydratedNames": Object {},
            "rehydratedNames": Object {},
            "tagMap": Object {
              "sc-bdVaJa": Object {
                "clone": [Function],
                "css": [Function],
                "getIds": [Function],
                "hasNameForId": [Function],
                "insertMarker": [Function],
                "insertRules": [Function],
                "removeRules": [Function],
                "sealed": false,
                "styleTag": <style
                  data-styled=""
                  data-styled-version="4.4.1"
                >
                  
                  
/* sc-component-id: sc-bdVaJa */
.itsRtM{background-color:#fff;padding:25px 25px 15px 25px;margin-bottom:40px;} .itsRtM h4{margin-bottom:20px;text-align:center;} .itsRtM .term{font-weight:bold;}
                </style>,
                "toElement": [Function],
                "toHTML": [Function],
              },
            },
            "tags": Array [
              Object {
                "clone": [Function],
                "css": [Function],
                "getIds": [Function],
                "hasNameForId": [Function],
                "insertMarker": [Function],
                "insertRules": [Function],
                "removeRules": [Function],
                "sealed": false,
                "styleTag": <style
                  data-styled=""
                  data-styled-version="4.4.1"
                >
                  
                  
/* sc-component-id: sc-bdVaJa */
.itsRtM{background-color:#fff;padding:25px 25px 15px 25px;margin-bottom:40px;} .itsRtM h4{margin-bottom:20px;text-align:center;} .itsRtM .term{font-weight:bold;}
                </style>,
                "toElement": [Function],
                "toHTML": [Function],
              },
            ],
            "target": <head>
              <style
                data-styled=""
                data-styled-version="4.4.1"
              >
                
                
/* sc-component-id: sc-bdVaJa */
.itsRtM{background-color:#fff;padding:25px 25px 15px 25px;margin-bottom:40px;} .itsRtM h4{margin-bottom:20px;text-align:center;} .itsRtM .term{font-weight:bold;}
              </style>
            </head>,
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
          "warnAttrsFnObjectKeyDeprecated": [Function],
          "warnInnerRef": [Function],
          "warnNonStyledComponentAttrsObjectKey": [Function],
        },
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            null,
            <Spinner />,
            <View
              char={Array []}
            />,
          ],
          "forwardedComponent": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": false,
              "lastClassName": "itsRtM",
              "rules": Array [
                "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
          "forwardedRef": null,
        },
        "ref": null,
        "rendered": Object {
          "instance": <div
            class="sc-bdVaJa itsRtM"
          >
            <div
              class="loadingio-spinner-eclipse-w2gkkbfua7n"
            >
              <div
                class="ldio-phqn5f5evyg"
              >
                <div />
              </div>
            </div>
            <h4>
              Random Character: 
            </h4>
            <ul
              class="list-group list-group-flush"
            >
              <li
                class="list-group-item d-flex justify-content-between"
              >
                <span
                  class="term"
                >
                  Gender 
                </span>
                <span />
              </li>
              <li
                class="list-group-item d-flex justify-content-between"
              >
                <span
                  class="term"
                >
                  Born 
                </span>
                <span />
              </li>
              <li
                class="list-group-item d-flex justify-content-between"
              >
                <span
                  class="term"
                >
                  Died 
                </span>
                <span />
              </li>
              <li
                class="list-group-item d-flex justify-content-between"
              >
                <span
                  class="term"
                >
                  Culture 
                </span>
                <span />
              </li>
            </ul>
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              null,
              <Spinner />,
              <View
                char={Array []}
              />,
            ],
            "className": "sc-bdVaJa itsRtM",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": Object {
                "instance": <div
                  class="loadingio-spinner-eclipse-w2gkkbfua7n"
                >
                  <div
                    class="ldio-phqn5f5evyg"
                  >
                    <div />
                  </div>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="ldio-phqn5f5evyg"
                  >
                    <div />
                  </div>,
                  "className": "loadingio-spinner-eclipse-w2gkkbfua7n",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <div
                      class="ldio-phqn5f5evyg"
                    >
                      <div />
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div />,
                      "className": "ldio-phqn5f5evyg",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <div />,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": Array [
                          undefined,
                        ],
                        "type": "div",
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "char": Array [],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <h4>
                    Random Character: 
                  </h4>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Random Character: ",
                      undefined,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "Random Character: ",
                  ],
                  "type": "h4",
                },
                Object {
                  "instance": <ul
                    class="list-group list-group-flush"
                  >
                    <li
                      class="list-group-item d-flex justify-content-between"
                    >
                      <span
                        class="term"
                      >
                        Gender 
                      </span>
                      <span />
                    </li>
                    <li
                      class="list-group-item d-flex justify-content-between"
                    >
                      <span
                        class="term"
                      >
                        Born 
                      </span>
                      <span />
                    </li>
                    <li
                      class="list-group-item d-flex justify-content-between"
                    >
                      <span
                        class="term"
                      >
                        Died 
                      </span>
                      <span />
                    </li>
                    <li
                      class="list-group-item d-flex justify-content-between"
                    >
                      <span
                        class="term"
                      >
                        Culture 
                      </span>
                      <span />
                    </li>
                  </ul>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <li
                        className="list-group-item d-flex justify-content-between"
                      >
                        <span
                          className="term"
                        >
                          Gender 
                        </span>
                        <span />
                      </li>,
                      <li
                        className="list-group-item d-flex justify-content-between"
                      >
                        <span
                          className="term"
                        >
                          Born 
                        </span>
                        <span />
                      </li>,
                      <li
                        className="list-group-item d-flex justify-content-between"
                      >
                        <span
                          className="term"
                        >
                          Died 
                        </span>
                        <span />
                      </li>,
                      <li
                        className="list-group-item d-flex justify-content-between"
                      >
                        <span
                          className="term"
                        >
                          Culture 
                        </span>
                        <span />
                      </li>,
                    ],
                    "className": "list-group list-group-flush",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <li
                        class="list-group-item d-flex justify-content-between"
                      >
                        <span
                          class="term"
                        >
                          Gender 
                        </span>
                        <span />
                      </li>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <span
                            className="term"
                          >
                            Gender 
                          </span>,
                          <span />,
                        ],
                        "className": "list-group-item d-flex justify-content-between",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <span
                            class="term"
                          >
                            Gender 
                          </span>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Gender ",
                            "className": "term",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Gender ",
                          ],
                          "type": "span",
                        },
                        Object {
                          "instance": <span />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": undefined,
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "span",
                        },
                      ],
                      "type": "li",
                    },
                    Object {
                      "instance": <li
                        class="list-group-item d-flex justify-content-between"
                      >
                        <span
                          class="term"
                        >
                          Born 
                        </span>
                        <span />
                      </li>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <span
                            className="term"
                          >
                            Born 
                          </span>,
                          <span />,
                        ],
                        "className": "list-group-item d-flex justify-content-between",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <span
                            class="term"
                          >
                            Born 
                          </span>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Born ",
                            "className": "term",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Born ",
                          ],
                          "type": "span",
                        },
                        Object {
                          "instance": <span />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": undefined,
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "span",
                        },
                      ],
                      "type": "li",
                    },
                    Object {
                      "instance": <li
                        class="list-group-item d-flex justify-content-between"
                      >
                        <span
                          class="term"
                        >
                          Died 
                        </span>
                        <span />
                      </li>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <span
                            className="term"
                          >
                            Died 
                          </span>,
                          <span />,
                        ],
                        "className": "list-group-item d-flex justify-content-between",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <span
                            class="term"
                          >
                            Died 
                          </span>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Died ",
                            "className": "term",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Died ",
                          ],
                          "type": "span",
                        },
                        Object {
                          "instance": <span />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": undefined,
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "span",
                        },
                      ],
                      "type": "li",
                    },
                    Object {
                      "instance": <li
                        class="list-group-item d-flex justify-content-between"
                      >
                        <span
                          class="term"
                        >
                          Culture 
                        </span>
                        <span />
                      </li>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <span
                            className="term"
                          >
                            Culture 
                          </span>,
                          <span />,
                        ],
                        "className": "list-group-item d-flex justify-content-between",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <span
                            class="term"
                          >
                            Culture 
                          </span>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Culture ",
                            "className": "term",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Culture ",
                          ],
                          "type": "span",
                        },
                        Object {
                          "instance": <span />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": undefined,
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "span",
                        },
                      ],
                      "type": "li",
                    },
                  ],
                  "type": "ul",
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "lastClassName": "itsRtM",
          "rules": Array [
            "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "interval": 15000,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            null,
            <Spinner />,
            <View
              char={Array []}
            />,
          ],
        },
        "ref": null,
        "rendered": Object {
          "instance": StyledComponent {
            "_reactInternalFiber": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 134,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 132,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": Array [
                    "useState",
                    "useState",
                    "useState",
                    "useEffect",
                  ],
                  "_debugID": 130,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 128,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div>
                            <div
                              class="sc-bdVaJa itsRtM"
                            >
                              <div
                                class="loadingio-spinner-eclipse-w2gkkbfua7n"
                              >
                                <div
                                  class="ldio-phqn5f5evyg"
                                >
                                  <div />
                                </div>
                              </div>
                              <h4>
                                Random Character: 
                              </h4>
                              <ul
                                class="list-group list-group-flush"
                              >
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Gender 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Born 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Died 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Culture 
                                  </span>
                                  <span />
                                </li>
                              </ul>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": [Circular],
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "interval": 15000,
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "baseState": null,
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "interval": 15000,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <div
                            class="sc-bdVaJa itsRtM"
                          >
                            <div
                              class="loadingio-spinner-eclipse-w2gkkbfua7n"
                            >
                              <div
                                class="ldio-phqn5f5evyg"
                              >
                                <div />
                              </div>
                            </div>
                            <h4>
                              Random Character: 
                            </h4>
                            <ul
                              class="list-group list-group-flush"
                            >
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>
                            </ul>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "interval": 15000,
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "interval": 15000,
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "interval": 15000,
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "interval": 15000,
                        },
                        "wrappingComponentProps": null,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 517,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "interval": 15000,
                  },
                  "memoizedState": Object {
                    "baseQueue": null,
                    "baseState": Array [],
                    "memoizedState": Array [],
                    "next": Object {
                      "baseQueue": null,
                      "baseState": true,
                      "memoizedState": true,
                      "next": Object {
                        "baseQueue": null,
                        "baseState": false,
                        "memoizedState": false,
                        "next": Object {
                          "baseQueue": null,
                          "baseState": null,
                          "memoizedState": Object {
                            "create": [Function],
                            "deps": Array [],
                            "destroy": [Function],
                            "next": [Circular],
                            "tag": 5,
                          },
                          "next": null,
                          "queue": null,
                        },
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": false,
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": true,
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": Array [],
                      "pending": null,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "interval": 15000,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 128,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div>
                            <div
                              class="sc-bdVaJa itsRtM"
                            >
                              <div
                                class="loadingio-spinner-eclipse-w2gkkbfua7n"
                              >
                                <div
                                  class="ldio-phqn5f5evyg"
                                >
                                  <div />
                                </div>
                              </div>
                              <h4>
                                Random Character: 
                              </h4>
                              <ul
                                class="list-group list-group-flush"
                              >
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Gender 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Born 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Died 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Culture 
                                  </span>
                                  <span />
                                </li>
                              </ul>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": [Circular],
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "interval": 15000,
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "baseState": null,
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "interval": 15000,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <div
                            class="sc-bdVaJa itsRtM"
                          >
                            <div
                              class="loadingio-spinner-eclipse-w2gkkbfua7n"
                            >
                              <div
                                class="ldio-phqn5f5evyg"
                              >
                                <div />
                              </div>
                            </div>
                            <h4>
                              Random Character: 
                            </h4>
                            <ul
                              class="list-group list-group-flush"
                            >
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>
                            </ul>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "interval": 15000,
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "interval": 15000,
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "interval": 15000,
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "interval": 15000,
                        },
                        "wrappingComponentProps": null,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "lastEffect": Object {
                      "create": [Function],
                      "deps": Array [],
                      "destroy": [Function],
                      "next": [Circular],
                      "tag": 5,
                    },
                  },
                },
                "_debugSource": Object {
                  "columnNumber": 5,
                  "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                  "lineNumber": 58,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "itsRtM",
                    "rules": Array [
                      "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    null,
                    <Spinner />,
                    <View
                      char={Array []}
                    />,
                  ],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    null,
                    <Spinner />,
                    <View
                      char={Array []}
                    />,
                  ],
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": Array [
                    "useState",
                    "useState",
                    "useState",
                    "useEffect",
                  ],
                  "_debugID": 130,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 128,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div>
                            <div
                              class="sc-bdVaJa itsRtM"
                            >
                              <div
                                class="loadingio-spinner-eclipse-w2gkkbfua7n"
                              >
                                <div
                                  class="ldio-phqn5f5evyg"
                                >
                                  <div />
                                </div>
                              </div>
                              <h4>
                                Random Character: 
                              </h4>
                              <ul
                                class="list-group list-group-flush"
                              >
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Gender 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Born 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Died 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Culture 
                                  </span>
                                  <span />
                                </li>
                              </ul>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": [Circular],
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "interval": 15000,
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "baseState": null,
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "interval": 15000,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <div
                            class="sc-bdVaJa itsRtM"
                          >
                            <div
                              class="loadingio-spinner-eclipse-w2gkkbfua7n"
                            >
                              <div
                                class="ldio-phqn5f5evyg"
                              >
                                <div />
                              </div>
                            </div>
                            <h4>
                              Random Character: 
                            </h4>
                            <ul
                              class="list-group list-group-flush"
                            >
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>
                            </ul>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "interval": 15000,
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "interval": 15000,
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "interval": 15000,
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "interval": 15000,
                        },
                        "wrappingComponentProps": null,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 517,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "interval": 15000,
                  },
                  "memoizedState": Object {
                    "baseQueue": null,
                    "baseState": Array [],
                    "memoizedState": Array [],
                    "next": Object {
                      "baseQueue": null,
                      "baseState": true,
                      "memoizedState": true,
                      "next": Object {
                        "baseQueue": null,
                        "baseState": false,
                        "memoizedState": false,
                        "next": Object {
                          "baseQueue": null,
                          "baseState": null,
                          "memoizedState": Object {
                            "create": [Function],
                            "deps": Array [],
                            "destroy": [Function],
                            "next": [Circular],
                            "tag": 5,
                          },
                          "next": null,
                          "queue": null,
                        },
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": false,
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": true,
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": Array [],
                      "pending": null,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "interval": 15000,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 128,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div>
                            <div
                              class="sc-bdVaJa itsRtM"
                            >
                              <div
                                class="loadingio-spinner-eclipse-w2gkkbfua7n"
                              >
                                <div
                                  class="ldio-phqn5f5evyg"
                                >
                                  <div />
                                </div>
                              </div>
                              <h4>
                                Random Character: 
                              </h4>
                              <ul
                                class="list-group list-group-flush"
                              >
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Gender 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Born 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Died 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Culture 
                                  </span>
                                  <span />
                                </li>
                              </ul>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": [Circular],
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "interval": 15000,
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "baseState": null,
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "interval": 15000,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <div
                            class="sc-bdVaJa itsRtM"
                          >
                            <div
                              class="loadingio-spinner-eclipse-w2gkkbfua7n"
                            >
                              <div
                                class="ldio-phqn5f5evyg"
                              >
                                <div />
                              </div>
                            </div>
                            <h4>
                              Random Character: 
                            </h4>
                            <ul
                              class="list-group list-group-flush"
                            >
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>
                            </ul>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "interval": 15000,
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "interval": 15000,
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "interval": 15000,
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "interval": 15000,
                        },
                        "wrappingComponentProps": null,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "lastEffect": Object {
                      "create": [Function],
                      "deps": Array [],
                      "destroy": [Function],
                      "next": [Circular],
                      "tag": 5,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 11,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "itsRtM",
                    "rules": Array [
                      "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
                "updateQueue": null,
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 142,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                          "useState",
                          "useState",
                          "useEffect",
                        ],
                        "_debugID": 130,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 128,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "interval": 15000,
                            },
                            "refProp": null,
                            "wrappingComponentProps": null,
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "interval": 15000,
                            },
                            "wrappingComponentProps": null,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "interval": 15000,
                            },
                            "refProp": null,
                            "wrappingComponentProps": null,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 125,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 125,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": [Circular],
                              "child": null,
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 1073741823,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <div
                                    class="sc-bdVaJa itsRtM"
                                  >
                                    <div
                                      class="loadingio-spinner-eclipse-w2gkkbfua7n"
                                    >
                                      <div
                                        class="ldio-phqn5f5evyg"
                                      >
                                        <div />
                                      </div>
                                    </div>
                                    <h4>
                                      Random Character: 
                                    </h4>
                                    <ul
                                      class="list-group list-group-flush"
                                    >
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Gender 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Born 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Died 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Culture 
                                        </span>
                                        <span />
                                      </li>
                                    </ul>
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 17,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseQueue": Object {
                                  "callback": null,
                                  "expirationTime": 1073741823,
                                  "next": [Circular],
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "interval": 15000,
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "priority": 97,
                                  "suspenseConfig": null,
                                  "tag": 0,
                                },
                                "baseState": null,
                                "effects": null,
                                "shared": Object {
                                  "pending": null,
                                },
                              },
                            },
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 0,
                            "elementType": null,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "interval": 15000,
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "callbackExpirationTime": 0,
                              "callbackNode": null,
                              "callbackPriority": 90,
                              "containerInfo": <div>
                                <div
                                  class="sc-bdVaJa itsRtM"
                                >
                                  <div
                                    class="loadingio-spinner-eclipse-w2gkkbfua7n"
                                  >
                                    <div
                                      class="ldio-phqn5f5evyg"
                                    >
                                      <div />
                                    </div>
                                  </div>
                                  <h4>
                                    Random Character: 
                                  </h4>
                                  <ul
                                    class="list-group list-group-flush"
                                  >
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Gender 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Born 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Died 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Culture 
                                      </span>
                                      <span />
                                    </li>
                                  </ul>
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedExpirationTime": 0,
                              "finishedWork": null,
                              "firstPendingTime": 0,
                              "firstSuspendedTime": 0,
                              "hydrate": false,
                              "interactionThreadID": 17,
                              "lastExpiredTime": 0,
                              "lastPingedTime": 0,
                              "lastSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextKnownPendingLevel": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pingCache": null,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseQueue": null,
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "interval": 15000,
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "effects": null,
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "interval": 15000,
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "interval": 15000,
                              },
                              "wrappingComponentProps": null,
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": Object {
                            "baseQueue": null,
                            "baseState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "interval": 15000,
                              },
                              "wrappingComponentProps": null,
                            },
                            "effects": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 132,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "columnNumber": 5,
                            "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                            "lineNumber": 58,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bdVaJa",
                              "isStatic": false,
                              "lastClassName": "itsRtM",
                              "rules": Array [
                                "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bdVaJa",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              null,
                              <Spinner />,
                              <View
                                char={Array []}
                              />,
                            ],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              null,
                              <Spinner />,
                              <View
                                char={Array []}
                              />,
                            ],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 11,
                          "treeBaseDuration": 0,
                          "type": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bdVaJa",
                              "isStatic": false,
                              "lastClassName": "itsRtM",
                              "rules": Array [
                                "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bdVaJa",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 517,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "interval": 15000,
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": Array [],
                          "memoizedState": Array [],
                          "next": Object {
                            "baseQueue": null,
                            "baseState": true,
                            "memoizedState": true,
                            "next": Object {
                              "baseQueue": null,
                              "baseState": false,
                              "memoizedState": false,
                              "next": Object {
                                "baseQueue": null,
                                "baseState": null,
                                "memoizedState": Object {
                                  "create": [Function],
                                  "deps": Array [],
                                  "destroy": [Function],
                                  "next": [Circular],
                                  "tag": 5,
                                },
                                "next": null,
                                "queue": null,
                              },
                              "queue": Object {
                                "dispatch": [Function],
                                "lastRenderedReducer": [Function],
                                "lastRenderedState": false,
                                "pending": null,
                              },
                            },
                            "queue": Object {
                              "dispatch": [Function],
                              "lastRenderedReducer": [Function],
                              "lastRenderedState": true,
                              "pending": null,
                            },
                          },
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": Array [],
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "interval": 15000,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 128,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "interval": 15000,
                            },
                            "refProp": null,
                            "wrappingComponentProps": null,
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "interval": 15000,
                            },
                            "wrappingComponentProps": null,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "interval": 15000,
                            },
                            "refProp": null,
                            "wrappingComponentProps": null,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 125,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 125,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": [Circular],
                              "child": null,
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 1073741823,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <div
                                    class="sc-bdVaJa itsRtM"
                                  >
                                    <div
                                      class="loadingio-spinner-eclipse-w2gkkbfua7n"
                                    >
                                      <div
                                        class="ldio-phqn5f5evyg"
                                      >
                                        <div />
                                      </div>
                                    </div>
                                    <h4>
                                      Random Character: 
                                    </h4>
                                    <ul
                                      class="list-group list-group-flush"
                                    >
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Gender 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Born 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Died 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Culture 
                                        </span>
                                        <span />
                                      </li>
                                    </ul>
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 17,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseQueue": Object {
                                  "callback": null,
                                  "expirationTime": 1073741823,
                                  "next": [Circular],
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "interval": 15000,
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "priority": 97,
                                  "suspenseConfig": null,
                                  "tag": 0,
                                },
                                "baseState": null,
                                "effects": null,
                                "shared": Object {
                                  "pending": null,
                                },
                              },
                            },
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 0,
                            "elementType": null,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "interval": 15000,
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "callbackExpirationTime": 0,
                              "callbackNode": null,
                              "callbackPriority": 90,
                              "containerInfo": <div>
                                <div
                                  class="sc-bdVaJa itsRtM"
                                >
                                  <div
                                    class="loadingio-spinner-eclipse-w2gkkbfua7n"
                                  >
                                    <div
                                      class="ldio-phqn5f5evyg"
                                    >
                                      <div />
                                    </div>
                                  </div>
                                  <h4>
                                    Random Character: 
                                  </h4>
                                  <ul
                                    class="list-group list-group-flush"
                                  >
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Gender 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Born 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Died 
                                      </span>
                                      <span />
                                    </li>
                                    <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Culture 
                                      </span>
                                      <span />
                                    </li>
                                  </ul>
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedExpirationTime": 0,
                              "finishedWork": null,
                              "firstPendingTime": 0,
                              "firstSuspendedTime": 0,
                              "hydrate": false,
                              "interactionThreadID": 17,
                              "lastExpiredTime": 0,
                              "lastPingedTime": 0,
                              "lastSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextKnownPendingLevel": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pingCache": null,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseQueue": null,
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "interval": 15000,
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "effects": null,
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "interval": 15000,
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "interval": 15000,
                              },
                              "wrappingComponentProps": null,
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": Object {
                            "baseQueue": null,
                            "baseState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "interval": 15000,
                              },
                              "wrappingComponentProps": null,
                            },
                            "effects": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": Object {
                          "lastEffect": Object {
                            "create": [Function],
                            "deps": Array [],
                            "destroy": [Function],
                            "next": [Circular],
                            "tag": 5,
                          },
                        },
                      },
                      "_debugSource": Object {
                        "columnNumber": 29,
                        "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                        "lineNumber": 41,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 145,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "columnNumber": 7,
                          "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\spinner\\\\spinner.js",
                          "lineNumber": 7,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 147,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "columnNumber": 9,
                            "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\spinner\\\\spinner.js",
                            "lineNumber": 8,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 149,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "columnNumber": 11,
                              "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\spinner\\\\spinner.js",
                              "lineNumber": 9,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 0,
                            "elementType": "div",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {},
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {},
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <div />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <div />,
                            "className": "ldio-phqn5f5evyg",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <div />,
                            "className": "ldio-phqn5f5evyg",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="ldio-phqn5f5evyg"
                          >
                            <div />
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <div
                            className="ldio-phqn5f5evyg"
                          >
                            <div />
                          </div>,
                          "className": "loadingio-spinner-eclipse-w2gkkbfua7n",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <div
                            className="ldio-phqn5f5evyg"
                          >
                            <div />
                          </div>,
                          "className": "loadingio-spinner-eclipse-w2gkkbfua7n",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="loadingio-spinner-eclipse-w2gkkbfua7n"
                        >
                          <div
                            class="ldio-phqn5f5evyg"
                          >
                            <div />
                          </div>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 143,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": FiberNode {
                          "_debugHookTypes": Array [
                            "useState",
                            "useState",
                            "useState",
                            "useEffect",
                          ],
                          "_debugID": 130,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 128,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "interval": 15000,
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "interval": 15000,
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "interval": 15000,
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 125,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 125,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <div
                                      class="sc-bdVaJa itsRtM"
                                    >
                                      <div
                                        class="loadingio-spinner-eclipse-w2gkkbfua7n"
                                      >
                                        <div
                                          class="ldio-phqn5f5evyg"
                                        >
                                          <div />
                                        </div>
                                      </div>
                                      <h4>
                                        Random Character: 
                                      </h4>
                                      <ul
                                        class="list-group list-group-flush"
                                      >
                                        <li
                                          class="list-group-item d-flex justify-content-between"
                                        >
                                          <span
                                            class="term"
                                          >
                                            Gender 
                                          </span>
                                          <span />
                                        </li>
                                        <li
                                          class="list-group-item d-flex justify-content-between"
                                        >
                                          <span
                                            class="term"
                                          >
                                            Born 
                                          </span>
                                          <span />
                                        </li>
                                        <li
                                          class="list-group-item d-flex justify-content-between"
                                        >
                                          <span
                                            class="term"
                                          >
                                            Died 
                                          </span>
                                          <span />
                                        </li>
                                        <li
                                          class="list-group-item d-flex justify-content-between"
                                        >
                                          <span
                                            class="term"
                                          >
                                            Culture 
                                          </span>
                                          <span />
                                        </li>
                                      </ul>
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 17,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseQueue": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": [Circular],
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "interval": 15000,
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "baseState": null,
                                  "effects": null,
                                  "shared": Object {
                                    "pending": null,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "interval": 15000,
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <div
                                    class="sc-bdVaJa itsRtM"
                                  >
                                    <div
                                      class="loadingio-spinner-eclipse-w2gkkbfua7n"
                                    >
                                      <div
                                        class="ldio-phqn5f5evyg"
                                      >
                                        <div />
                                      </div>
                                    </div>
                                    <h4>
                                      Random Character: 
                                    </h4>
                                    <ul
                                      class="list-group list-group-flush"
                                    >
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Gender 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Born 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Died 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Culture 
                                        </span>
                                        <span />
                                      </li>
                                    </ul>
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 17,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseQueue": null,
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "interval": 15000,
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "effects": null,
                                "shared": Object {
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "interval": 15000,
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "interval": 15000,
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": Object {
                              "baseQueue": null,
                              "baseState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "interval": 15000,
                                },
                                "wrappingComponentProps": null,
                              },
                              "effects": null,
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 132,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "columnNumber": 5,
                              "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                              "lineNumber": 58,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "itsRtM",
                                "rules": Array [
                                  "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            },
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                null,
                                <Spinner />,
                                <View
                                  char={Array []}
                                />,
                              ],
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                null,
                                <Spinner />,
                                <View
                                  char={Array []}
                                />,
                              ],
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 11,
                            "treeBaseDuration": 0,
                            "type": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "itsRtM",
                                "rules": Array [
                                  "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            },
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 517,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "interval": 15000,
                          },
                          "memoizedState": Object {
                            "baseQueue": null,
                            "baseState": Array [],
                            "memoizedState": Array [],
                            "next": Object {
                              "baseQueue": null,
                              "baseState": true,
                              "memoizedState": true,
                              "next": Object {
                                "baseQueue": null,
                                "baseState": false,
                                "memoizedState": false,
                                "next": Object {
                                  "baseQueue": null,
                                  "baseState": null,
                                  "memoizedState": Object {
                                    "create": [Function],
                                    "deps": Array [],
                                    "destroy": [Function],
                                    "next": [Circular],
                                    "tag": 5,
                                  },
                                  "next": null,
                                  "queue": null,
                                },
                                "queue": Object {
                                  "dispatch": [Function],
                                  "lastRenderedReducer": [Function],
                                  "lastRenderedState": false,
                                  "pending": null,
                                },
                              },
                              "queue": Object {
                                "dispatch": [Function],
                                "lastRenderedReducer": [Function],
                                "lastRenderedState": true,
                                "pending": null,
                              },
                            },
                            "queue": Object {
                              "dispatch": [Function],
                              "lastRenderedReducer": [Function],
                              "lastRenderedState": Array [],
                              "pending": null,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "interval": 15000,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 128,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "interval": 15000,
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "interval": 15000,
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "interval": 15000,
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 125,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 125,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <div
                                      class="sc-bdVaJa itsRtM"
                                    >
                                      <div
                                        class="loadingio-spinner-eclipse-w2gkkbfua7n"
                                      >
                                        <div
                                          class="ldio-phqn5f5evyg"
                                        >
                                          <div />
                                        </div>
                                      </div>
                                      <h4>
                                        Random Character: 
                                      </h4>
                                      <ul
                                        class="list-group list-group-flush"
                                      >
                                        <li
                                          class="list-group-item d-flex justify-content-between"
                                        >
                                          <span
                                            class="term"
                                          >
                                            Gender 
                                          </span>
                                          <span />
                                        </li>
                                        <li
                                          class="list-group-item d-flex justify-content-between"
                                        >
                                          <span
                                            class="term"
                                          >
                                            Born 
                                          </span>
                                          <span />
                                        </li>
                                        <li
                                          class="list-group-item d-flex justify-content-between"
                                        >
                                          <span
                                            class="term"
                                          >
                                            Died 
                                          </span>
                                          <span />
                                        </li>
                                        <li
                                          class="list-group-item d-flex justify-content-between"
                                        >
                                          <span
                                            class="term"
                                          >
                                            Culture 
                                          </span>
                                          <span />
                                        </li>
                                      </ul>
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 17,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseQueue": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": [Circular],
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "interval": 15000,
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "baseState": null,
                                  "effects": null,
                                  "shared": Object {
                                    "pending": null,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "interval": 15000,
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <div
                                    class="sc-bdVaJa itsRtM"
                                  >
                                    <div
                                      class="loadingio-spinner-eclipse-w2gkkbfua7n"
                                    >
                                      <div
                                        class="ldio-phqn5f5evyg"
                                      >
                                        <div />
                                      </div>
                                    </div>
                                    <h4>
                                      Random Character: 
                                    </h4>
                                    <ul
                                      class="list-group list-group-flush"
                                    >
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Gender 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Born 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Died 
                                        </span>
                                        <span />
                                      </li>
                                      <li
                                        class="list-group-item d-flex justify-content-between"
                                      >
                                        <span
                                          class="term"
                                        >
                                          Culture 
                                        </span>
                                        <span />
                                      </li>
                                    </ul>
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 17,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseQueue": null,
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "interval": 15000,
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "effects": null,
                                "shared": Object {
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "interval": 15000,
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "interval": 15000,
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": Object {
                              "baseQueue": null,
                              "baseState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "interval": 15000,
                                },
                                "wrappingComponentProps": null,
                              },
                              "effects": null,
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": Object {
                            "lastEffect": Object {
                              "create": [Function],
                              "deps": Array [],
                              "destroy": [Function],
                              "next": [Circular],
                              "tag": 5,
                            },
                          },
                        },
                        "_debugSource": Object {
                          "columnNumber": 19,
                          "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                          "lineNumber": 42,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 152,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "columnNumber": 7,
                            "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                            "lineNumber": 78,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 155,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 0,
                            "elementType": null,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": "Random Character: ",
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": "Random Character: ",
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Random Character: ,
                            "tag": 6,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": "h4",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              "Random Character: ",
                              undefined,
                            ],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              "Random Character: ",
                              undefined,
                            ],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 153,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "columnNumber": 7,
                              "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                              "lineNumber": 79,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 158,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "columnNumber": 9,
                                "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                "lineNumber": 80,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 163,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "columnNumber": 11,
                                  "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                  "lineNumber": 81,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": "span",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Gender ",
                                  "className": "term",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "Gender ",
                                  "className": "term",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 164,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "columnNumber": 11,
                                    "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                    "lineNumber": 82,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": "span",
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 1,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": undefined,
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": undefined,
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <span />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "span",
                                  "updateQueue": null,
                                },
                                "stateNode": <span
                                  class="term"
                                >
                                  Gender 
                                </span>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "span",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": "li",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <span
                                    className="term"
                                  >
                                    Gender 
                                  </span>,
                                  <span />,
                                ],
                                "className": "list-group-item d-flex justify-content-between",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <span
                                    className="term"
                                  >
                                    Gender 
                                  </span>,
                                  <span />,
                                ],
                                "className": "list-group-item d-flex justify-content-between",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 159,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "columnNumber": 9,
                                  "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                  "lineNumber": 84,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 168,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "columnNumber": 11,
                                    "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                    "lineNumber": 85,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": "span",
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Born ",
                                    "className": "term",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "Born ",
                                    "className": "term",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 169,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "columnNumber": 11,
                                      "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                      "lineNumber": 86,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "dependencies": null,
                                    "effectTag": 0,
                                    "elementType": "span",
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 1,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": undefined,
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": undefined,
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <span />,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "span",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <span
                                    class="term"
                                  >
                                    Born 
                                  </span>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "span",
                                  "updateQueue": null,
                                },
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": "li",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <span
                                      className="term"
                                    >
                                      Born 
                                    </span>,
                                    <span />,
                                  ],
                                  "className": "list-group-item d-flex justify-content-between",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <span
                                      className="term"
                                    >
                                      Born 
                                    </span>,
                                    <span />,
                                  ],
                                  "className": "list-group-item d-flex justify-content-between",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 160,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "columnNumber": 9,
                                    "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                    "lineNumber": 88,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 173,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "columnNumber": 11,
                                      "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                      "lineNumber": 89,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "dependencies": null,
                                    "effectTag": 0,
                                    "elementType": "span",
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": "Died ",
                                      "className": "term",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": "Died ",
                                      "className": "term",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 174,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "columnNumber": 11,
                                        "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                        "lineNumber": 90,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "dependencies": null,
                                      "effectTag": 0,
                                      "elementType": "span",
                                      "expirationTime": 0,
                                      "firstEffect": null,
                                      "index": 1,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": undefined,
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": undefined,
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <span />,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "span",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <span
                                      class="term"
                                    >
                                      Died 
                                    </span>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "span",
                                    "updateQueue": null,
                                  },
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": "li",
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 2,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      <span
                                        className="term"
                                      >
                                        Died 
                                      </span>,
                                      <span />,
                                    ],
                                    "className": "list-group-item d-flex justify-content-between",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      <span
                                        className="term"
                                      >
                                        Died 
                                      </span>,
                                      <span />,
                                    ],
                                    "className": "list-group-item d-flex justify-content-between",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 161,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "columnNumber": 9,
                                      "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                      "lineNumber": 92,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 178,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "columnNumber": 11,
                                        "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                        "lineNumber": 93,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "dependencies": null,
                                      "effectTag": 0,
                                      "elementType": "span",
                                      "expirationTime": 0,
                                      "firstEffect": null,
                                      "index": 0,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": "Culture ",
                                        "className": "term",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": "Culture ",
                                        "className": "term",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 179,
                                        "_debugIsCurrentlyTiming": false,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "columnNumber": 11,
                                          "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                                          "lineNumber": 94,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childExpirationTime": 0,
                                        "dependencies": null,
                                        "effectTag": 0,
                                        "elementType": "span",
                                        "expirationTime": 0,
                                        "firstEffect": null,
                                        "index": 1,
                                        "key": null,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": undefined,
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": undefined,
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": <span />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "span",
                                        "updateQueue": null,
                                      },
                                      "stateNode": <span
                                        class="term"
                                      >
                                        Culture 
                                      </span>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "span",
                                      "updateQueue": null,
                                    },
                                    "childExpirationTime": 0,
                                    "dependencies": null,
                                    "effectTag": 0,
                                    "elementType": "li",
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 3,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        <span
                                          className="term"
                                        >
                                          Culture 
                                        </span>,
                                        <span />,
                                      ],
                                      "className": "list-group-item d-flex justify-content-between",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        <span
                                          className="term"
                                        >
                                          Culture 
                                        </span>,
                                        <span />,
                                      ],
                                      "className": "list-group-item d-flex justify-content-between",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <li
                                      class="list-group-item d-flex justify-content-between"
                                    >
                                      <span
                                        class="term"
                                      >
                                        Culture 
                                      </span>
                                      <span />
                                    </li>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "li",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <li
                                    class="list-group-item d-flex justify-content-between"
                                  >
                                    <span
                                      class="term"
                                    >
                                      Died 
                                    </span>
                                    <span />
                                  </li>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "li",
                                  "updateQueue": null,
                                },
                                "stateNode": <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Born 
                                  </span>
                                  <span />
                                </li>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "li",
                                "updateQueue": null,
                              },
                              "stateNode": <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "li",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 0,
                            "elementType": "ul",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <li
                                  className="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    className="term"
                                  >
                                    Gender 
                                  </span>
                                  <span />
                                </li>,
                                <li
                                  className="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    className="term"
                                  >
                                    Born 
                                  </span>
                                  <span />
                                </li>,
                                <li
                                  className="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    className="term"
                                  >
                                    Died 
                                  </span>
                                  <span />
                                </li>,
                                <li
                                  className="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    className="term"
                                  >
                                    Culture 
                                  </span>
                                  <span />
                                </li>,
                              ],
                              "className": "list-group list-group-flush",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <li
                                  className="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    className="term"
                                  >
                                    Gender 
                                  </span>
                                  <span />
                                </li>,
                                <li
                                  className="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    className="term"
                                  >
                                    Born 
                                  </span>
                                  <span />
                                </li>,
                                <li
                                  className="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    className="term"
                                  >
                                    Died 
                                  </span>
                                  <span />
                                </li>,
                                <li
                                  className="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    className="term"
                                  >
                                    Culture 
                                  </span>
                                  <span />
                                </li>,
                              ],
                              "className": "list-group list-group-flush",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <ul
                              class="list-group list-group-flush"
                            >
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>
                            </ul>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "ul",
                            "updateQueue": null,
                          },
                          "stateNode": <h4>
                            Random Character: 
                          </h4>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "h4",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "char": Array [],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "char": Array [],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        null,
                        <Spinner />,
                        <View
                          char={Array []}
                        />,
                      ],
                      "className": "sc-bdVaJa itsRtM",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        null,
                        <Spinner />,
                        <View
                          char={Array []}
                        />,
                      ],
                      "className": "sc-bdVaJa itsRtM",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="sc-bdVaJa itsRtM"
                    >
                      <div
                        class="loadingio-spinner-eclipse-w2gkkbfua7n"
                      >
                        <div
                          class="ldio-phqn5f5evyg"
                        >
                          <div />
                        </div>
                      </div>
                      <h4>
                        Random Character: 
                      </h4>
                      <ul
                        class="list-group list-group-flush"
                      >
                        <li
                          class="list-group-item d-flex justify-content-between"
                        >
                          <span
                            class="term"
                          >
                            Gender 
                          </span>
                          <span />
                        </li>
                        <li
                          class="list-group-item d-flex justify-content-between"
                        >
                          <span
                            class="term"
                          >
                            Born 
                          </span>
                          <span />
                        </li>
                        <li
                          class="list-group-item d-flex justify-content-between"
                        >
                          <span
                            class="term"
                          >
                            Died 
                          </span>
                          <span />
                        </li>
                        <li
                          class="list-group-item d-flex justify-content-between"
                        >
                          <span
                            class="term"
                          >
                            Culture 
                          </span>
                          <span />
                        </li>
                      </ul>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": null,
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": null,
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": null,
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": null,
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": null,
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": null,
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  null,
                  <Spinner />,
                  <View
                    char={Array []}
                  />,
                ],
                "forwardedComponent": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "itsRtM",
                    "rules": Array [
                      "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
                "forwardedRef": null,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  null,
                  <Spinner />,
                  <View
                    char={Array []}
                  />,
                ],
                "forwardedComponent": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "itsRtM",
                    "rules": Array [
                      "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
                "forwardedRef": null,
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 132,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": Array [
                    "useState",
                    "useState",
                    "useState",
                    "useEffect",
                  ],
                  "_debugID": 130,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 128,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div>
                            <div
                              class="sc-bdVaJa itsRtM"
                            >
                              <div
                                class="loadingio-spinner-eclipse-w2gkkbfua7n"
                              >
                                <div
                                  class="ldio-phqn5f5evyg"
                                >
                                  <div />
                                </div>
                              </div>
                              <h4>
                                Random Character: 
                              </h4>
                              <ul
                                class="list-group list-group-flush"
                              >
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Gender 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Born 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Died 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Culture 
                                  </span>
                                  <span />
                                </li>
                              </ul>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": [Circular],
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "interval": 15000,
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "baseState": null,
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "interval": 15000,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <div
                            class="sc-bdVaJa itsRtM"
                          >
                            <div
                              class="loadingio-spinner-eclipse-w2gkkbfua7n"
                            >
                              <div
                                class="ldio-phqn5f5evyg"
                              >
                                <div />
                              </div>
                            </div>
                            <h4>
                              Random Character: 
                            </h4>
                            <ul
                              class="list-group list-group-flush"
                            >
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>
                            </ul>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "interval": 15000,
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "interval": 15000,
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "interval": 15000,
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "interval": 15000,
                        },
                        "wrappingComponentProps": null,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 517,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "interval": 15000,
                  },
                  "memoizedState": Object {
                    "baseQueue": null,
                    "baseState": Array [],
                    "memoizedState": Array [],
                    "next": Object {
                      "baseQueue": null,
                      "baseState": true,
                      "memoizedState": true,
                      "next": Object {
                        "baseQueue": null,
                        "baseState": false,
                        "memoizedState": false,
                        "next": Object {
                          "baseQueue": null,
                          "baseState": null,
                          "memoizedState": Object {
                            "create": [Function],
                            "deps": Array [],
                            "destroy": [Function],
                            "next": [Circular],
                            "tag": 5,
                          },
                          "next": null,
                          "queue": null,
                        },
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": false,
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": true,
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": Array [],
                      "pending": null,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "interval": 15000,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 128,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div>
                            <div
                              class="sc-bdVaJa itsRtM"
                            >
                              <div
                                class="loadingio-spinner-eclipse-w2gkkbfua7n"
                              >
                                <div
                                  class="ldio-phqn5f5evyg"
                                >
                                  <div />
                                </div>
                              </div>
                              <h4>
                                Random Character: 
                              </h4>
                              <ul
                                class="list-group list-group-flush"
                              >
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Gender 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Born 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Died 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Culture 
                                  </span>
                                  <span />
                                </li>
                              </ul>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": [Circular],
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "interval": 15000,
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "baseState": null,
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "interval": 15000,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <div
                            class="sc-bdVaJa itsRtM"
                          >
                            <div
                              class="loadingio-spinner-eclipse-w2gkkbfua7n"
                            >
                              <div
                                class="ldio-phqn5f5evyg"
                              >
                                <div />
                              </div>
                            </div>
                            <h4>
                              Random Character: 
                            </h4>
                            <ul
                              class="list-group list-group-flush"
                            >
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>
                            </ul>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "interval": 15000,
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "interval": 15000,
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "interval": 15000,
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "interval": 15000,
                        },
                        "wrappingComponentProps": null,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "lastEffect": Object {
                      "create": [Function],
                      "deps": Array [],
                      "destroy": [Function],
                      "next": [Circular],
                      "tag": 5,
                    },
                  },
                },
                "_debugSource": Object {
                  "columnNumber": 5,
                  "fileName": "C:\\\\Users\\\\Evgen\\\\ReactJS\\\\fetchAPI\\\\react-gotapp\\\\src\\\\components\\\\randomChar\\\\randomChar.js",
                  "lineNumber": 58,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "itsRtM",
                    "rules": Array [
                      "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    null,
                    <Spinner />,
                    <View
                      char={Array []}
                    />,
                  ],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    null,
                    <Spinner />,
                    <View
                      char={Array []}
                    />,
                  ],
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": Array [
                    "useState",
                    "useState",
                    "useState",
                    "useEffect",
                  ],
                  "_debugID": 130,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 128,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div>
                            <div
                              class="sc-bdVaJa itsRtM"
                            >
                              <div
                                class="loadingio-spinner-eclipse-w2gkkbfua7n"
                              >
                                <div
                                  class="ldio-phqn5f5evyg"
                                >
                                  <div />
                                </div>
                              </div>
                              <h4>
                                Random Character: 
                              </h4>
                              <ul
                                class="list-group list-group-flush"
                              >
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Gender 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Born 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Died 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Culture 
                                  </span>
                                  <span />
                                </li>
                              </ul>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": [Circular],
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "interval": 15000,
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "baseState": null,
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "interval": 15000,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <div
                            class="sc-bdVaJa itsRtM"
                          >
                            <div
                              class="loadingio-spinner-eclipse-w2gkkbfua7n"
                            >
                              <div
                                class="ldio-phqn5f5evyg"
                              >
                                <div />
                              </div>
                            </div>
                            <h4>
                              Random Character: 
                            </h4>
                            <ul
                              class="list-group list-group-flush"
                            >
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>
                            </ul>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "interval": 15000,
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "interval": 15000,
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "interval": 15000,
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "interval": 15000,
                        },
                        "wrappingComponentProps": null,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 517,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "interval": 15000,
                  },
                  "memoizedState": Object {
                    "baseQueue": null,
                    "baseState": Array [],
                    "memoizedState": Array [],
                    "next": Object {
                      "baseQueue": null,
                      "baseState": true,
                      "memoizedState": true,
                      "next": Object {
                        "baseQueue": null,
                        "baseState": false,
                        "memoizedState": false,
                        "next": Object {
                          "baseQueue": null,
                          "baseState": null,
                          "memoizedState": Object {
                            "create": [Function],
                            "deps": Array [],
                            "destroy": [Function],
                            "next": [Circular],
                            "tag": 5,
                          },
                          "next": null,
                          "queue": null,
                        },
                        "queue": Object {
                          "dispatch": [Function],
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": false,
                          "pending": null,
                        },
                      },
                      "queue": Object {
                        "dispatch": [Function],
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": true,
                        "pending": null,
                      },
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": Array [],
                      "pending": null,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "interval": 15000,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 128,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "interval": 15000,
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "interval": 15000,
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div>
                            <div
                              class="sc-bdVaJa itsRtM"
                            >
                              <div
                                class="loadingio-spinner-eclipse-w2gkkbfua7n"
                              >
                                <div
                                  class="ldio-phqn5f5evyg"
                                >
                                  <div />
                                </div>
                              </div>
                              <h4>
                                Random Character: 
                              </h4>
                              <ul
                                class="list-group list-group-flush"
                              >
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Gender 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Born 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Died 
                                  </span>
                                  <span />
                                </li>
                                <li
                                  class="list-group-item d-flex justify-content-between"
                                >
                                  <span
                                    class="term"
                                  >
                                    Culture 
                                  </span>
                                  <span />
                                </li>
                              </ul>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": [Circular],
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "interval": 15000,
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "baseState": null,
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "interval": 15000,
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <div
                            class="sc-bdVaJa itsRtM"
                          >
                            <div
                              class="loadingio-spinner-eclipse-w2gkkbfua7n"
                            >
                              <div
                                class="ldio-phqn5f5evyg"
                              >
                                <div />
                              </div>
                            </div>
                            <h4>
                              Random Character: 
                            </h4>
                            <ul
                              class="list-group list-group-flush"
                            >
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Gender 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Born 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Died 
                                </span>
                                <span />
                              </li>
                              <li
                                class="list-group-item d-flex justify-content-between"
                              >
                                <span
                                  class="term"
                                >
                                  Culture 
                                </span>
                                <span />
                              </li>
                            </ul>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "interval": 15000,
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "interval": 15000,
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "interval": 15000,
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "interval": 15000,
                        },
                        "wrappingComponentProps": null,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "lastEffect": Object {
                      "create": [Function],
                      "deps": Array [],
                      "destroy": [Function],
                      "next": [Circular],
                      "tag": 5,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 11,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "itsRtM",
                    "rules": Array [
                      "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": [Circular],
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_reactInternalInstance": Object {},
            "attrs": Object {},
            "context": Object {},
            "props": Object {
              "children": Array [
                null,
                <Spinner />,
                <View
                  char={Array []}
                />,
              ],
              "forwardedComponent": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bdVaJa",
                  "isStatic": false,
                  "lastClassName": "itsRtM",
                  "rules": Array [
                    "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bdVaJa",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
              "forwardedRef": null,
            },
            "refs": Object {},
            "renderInner": [Function],
            "renderOuter": [Function],
            "state": null,
            "styleSheet": StyleSheet {
              "capacity": 40,
              "clones": Array [],
              "deferred": Object {
                "sc-bdVaJa": undefined,
              },
              "forceServer": false,
              "getImportRuleTag": [Function],
              "id": 1,
              "ignoreRehydratedNames": Object {},
              "rehydratedNames": Object {},
              "tagMap": Object {
                "sc-bdVaJa": Object {
                  "clone": [Function],
                  "css": [Function],
                  "getIds": [Function],
                  "hasNameForId": [Function],
                  "insertMarker": [Function],
                  "insertRules": [Function],
                  "removeRules": [Function],
                  "sealed": false,
                  "styleTag": <style
                    data-styled=""
                    data-styled-version="4.4.1"
                  >
                    
                    
/* sc-component-id: sc-bdVaJa */
.itsRtM{background-color:#fff;padding:25px 25px 15px 25px;margin-bottom:40px;} .itsRtM h4{margin-bottom:20px;text-align:center;} .itsRtM .term{font-weight:bold;}
                  </style>,
                  "toElement": [Function],
                  "toHTML": [Function],
                },
              },
              "tags": Array [
                Object {
                  "clone": [Function],
                  "css": [Function],
                  "getIds": [Function],
                  "hasNameForId": [Function],
                  "insertMarker": [Function],
                  "insertRules": [Function],
                  "removeRules": [Function],
                  "sealed": false,
                  "styleTag": <style
                    data-styled=""
                    data-styled-version="4.4.1"
                  >
                    
                    
/* sc-component-id: sc-bdVaJa */
.itsRtM{background-color:#fff;padding:25px 25px 15px 25px;margin-bottom:40px;} .itsRtM h4{margin-bottom:20px;text-align:center;} .itsRtM .term{font-weight:bold;}
                  </style>,
                  "toElement": [Function],
                  "toHTML": [Function],
                },
              ],
              "target": <head>
                <style
                  data-styled=""
                  data-styled-version="4.4.1"
                >
                  
                  
/* sc-component-id: sc-bdVaJa */
.itsRtM{background-color:#fff;padding:25px 25px 15px 25px;margin-bottom:40px;} .itsRtM h4{margin-bottom:20px;text-align:center;} .itsRtM .term{font-weight:bold;}
                </style>
              </head>,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
            "warnAttrsFnObjectKeyDeprecated": [Function],
            "warnInnerRef": [Function],
            "warnNonStyledComponentAttrsObjectKey": [Function],
          },
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              null,
              <Spinner />,
              <View
                char={Array []}
              />,
            ],
            "forwardedComponent": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bdVaJa",
                "isStatic": false,
                "lastClassName": "itsRtM",
                "rules": Array [
                  "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bdVaJa",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
            "forwardedRef": null,
          },
          "ref": null,
          "rendered": Object {
            "instance": <div
              class="sc-bdVaJa itsRtM"
            >
              <div
                class="loadingio-spinner-eclipse-w2gkkbfua7n"
              >
                <div
                  class="ldio-phqn5f5evyg"
                >
                  <div />
                </div>
              </div>
              <h4>
                Random Character: 
              </h4>
              <ul
                class="list-group list-group-flush"
              >
                <li
                  class="list-group-item d-flex justify-content-between"
                >
                  <span
                    class="term"
                  >
                    Gender 
                  </span>
                  <span />
                </li>
                <li
                  class="list-group-item d-flex justify-content-between"
                >
                  <span
                    class="term"
                  >
                    Born 
                  </span>
                  <span />
                </li>
                <li
                  class="list-group-item d-flex justify-content-between"
                >
                  <span
                    class="term"
                  >
                    Died 
                  </span>
                  <span />
                </li>
                <li
                  class="list-group-item d-flex justify-content-between"
                >
                  <span
                    class="term"
                  >
                    Culture 
                  </span>
                  <span />
                </li>
              </ul>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                null,
                <Spinner />,
                <View
                  char={Array []}
                />,
              ],
              "className": "sc-bdVaJa itsRtM",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": Object {
                  "instance": <div
                    class="loadingio-spinner-eclipse-w2gkkbfua7n"
                  >
                    <div
                      class="ldio-phqn5f5evyg"
                    >
                      <div />
                    </div>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="ldio-phqn5f5evyg"
                    >
                      <div />
                    </div>,
                    "className": "loadingio-spinner-eclipse-w2gkkbfua7n",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <div
                        class="ldio-phqn5f5evyg"
                      >
                        <div />
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <div />,
                        "className": "ldio-phqn5f5evyg",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <div />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {},
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "div",
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "char": Array [],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <h4>
                      Random Character: 
                    </h4>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Random Character: ",
                        undefined,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Random Character: ",
                    ],
                    "type": "h4",
                  },
                  Object {
                    "instance": <ul
                      class="list-group list-group-flush"
                    >
                      <li
                        class="list-group-item d-flex justify-content-between"
                      >
                        <span
                          class="term"
                        >
                          Gender 
                        </span>
                        <span />
                      </li>
                      <li
                        class="list-group-item d-flex justify-content-between"
                      >
                        <span
                          class="term"
                        >
                          Born 
                        </span>
                        <span />
                      </li>
                      <li
                        class="list-group-item d-flex justify-content-between"
                      >
                        <span
                          class="term"
                        >
                          Died 
                        </span>
                        <span />
                      </li>
                      <li
                        class="list-group-item d-flex justify-content-between"
                      >
                        <span
                          class="term"
                        >
                          Culture 
                        </span>
                        <span />
                      </li>
                    </ul>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <li
                          className="list-group-item d-flex justify-content-between"
                        >
                          <span
                            className="term"
                          >
                            Gender 
                          </span>
                          <span />
                        </li>,
                        <li
                          className="list-group-item d-flex justify-content-between"
                        >
                          <span
                            className="term"
                          >
                            Born 
                          </span>
                          <span />
                        </li>,
                        <li
                          className="list-group-item d-flex justify-content-between"
                        >
                          <span
                            className="term"
                          >
                            Died 
                          </span>
                          <span />
                        </li>,
                        <li
                          className="list-group-item d-flex justify-content-between"
                        >
                          <span
                            className="term"
                          >
                            Culture 
                          </span>
                          <span />
                        </li>,
                      ],
                      "className": "list-group list-group-flush",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <li
                          class="list-group-item d-flex justify-content-between"
                        >
                          <span
                            class="term"
                          >
                            Gender 
                          </span>
                          <span />
                        </li>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <span
                              className="term"
                            >
                              Gender 
                            </span>,
                            <span />,
                          ],
                          "className": "list-group-item d-flex justify-content-between",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <span
                              class="term"
                            >
                              Gender 
                            </span>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Gender ",
                              "className": "term",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Gender ",
                            ],
                            "type": "span",
                          },
                          Object {
                            "instance": <span />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": undefined,
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "span",
                          },
                        ],
                        "type": "li",
                      },
                      Object {
                        "instance": <li
                          class="list-group-item d-flex justify-content-between"
                        >
                          <span
                            class="term"
                          >
                            Born 
                          </span>
                          <span />
                        </li>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <span
                              className="term"
                            >
                              Born 
                            </span>,
                            <span />,
                          ],
                          "className": "list-group-item d-flex justify-content-between",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <span
                              class="term"
                            >
                              Born 
                            </span>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Born ",
                              "className": "term",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Born ",
                            ],
                            "type": "span",
                          },
                          Object {
                            "instance": <span />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": undefined,
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "span",
                          },
                        ],
                        "type": "li",
                      },
                      Object {
                        "instance": <li
                          class="list-group-item d-flex justify-content-between"
                        >
                          <span
                            class="term"
                          >
                            Died 
                          </span>
                          <span />
                        </li>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <span
                              className="term"
                            >
                              Died 
                            </span>,
                            <span />,
                          ],
                          "className": "list-group-item d-flex justify-content-between",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <span
                              class="term"
                            >
                              Died 
                            </span>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Died ",
                              "className": "term",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Died ",
                            ],
                            "type": "span",
                          },
                          Object {
                            "instance": <span />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": undefined,
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "span",
                          },
                        ],
                        "type": "li",
                      },
                      Object {
                        "instance": <li
                          class="list-group-item d-flex justify-content-between"
                        >
                          <span
                            class="term"
                          >
                            Culture 
                          </span>
                          <span />
                        </li>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <span
                              className="term"
                            >
                              Culture 
                            </span>,
                            <span />,
                          ],
                          "className": "list-group-item d-flex justify-content-between",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <span
                              class="term"
                            >
                              Culture 
                            </span>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Culture ",
                              "className": "term",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Culture ",
                            ],
                            "type": "span",
                          },
                          Object {
                            "instance": <span />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": undefined,
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "span",
                          },
                        ],
                        "type": "li",
                      },
                    ],
                    "type": "ul",
                  },
                ],
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "itsRtM",
            "rules": Array [
              "
    background-color: #fff;
    padding: 25px 25px 15px 25px;
    margin-bottom: 40px;
    h4 {
      margin-bottom: 20px;
      text-align: center;
    }
    .term {
      font-weight: bold;
    }
  ",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <RandomChar
    interval={15000}
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;
